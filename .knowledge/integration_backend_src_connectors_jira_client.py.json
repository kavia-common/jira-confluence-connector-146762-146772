{"is_source_file": true, "format": "Python", "description": "This file implements a Python client for interacting with Atlassian Jira via its REST API. It manages token retrieval and refresh, performs API requests for listing projects, searching issues with JQL, and creating new issues. It handles authentication, rate limiting, and resource discovery, encapsulating Jira-specific operations into a dedicated class.", "external_files": [".../db/token_store.py", ".../api/errors.py"], "external_methods": ["get_tokens", "save_tokens", "update_meta", "error_response"], "published": ["JiraClient"], "classes": [{"name": "JiraClient", "description": "A lightweight client for Atlassian Jira REST API, supporting token management, project listing, issue search, and issue creation."}], "methods": [{"name": "Dict[str,Any] ensure_tokens(self)", "description": "Checks for valid access tokens, performs refresh if necessary, and returns current token details.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "None _refresh(self, refresh_token: str)", "description": "Uses refresh token to obtain a new access token from Jira's OAuth endpoint and updates stored tokens.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,str] _authorized_headers(self, token: str)", "description": "Constructs HTTP headers with Bearer token and request ID for authenticated API calls.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Tuple[str,str] _cloud_base_and_id(self, access_token: str)", "description": "Discovers or retrieves cached Jira cloud resource base URL and Cloud ID.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "httpx.Response _request_with_refresh(self, method: str, url: str, json_body: Optional[Dict[str, Any]] = None, params: Optional[Dict[str, Any]] = None)", "description": "Executes API requests, handling token refresh upon 401 responses and rate limiting.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "List[Dict[str,Any]] list_projects(self)", "description": "Retrieves a list of Jira projects accessible with current credentials.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "List[Dict[str,Any]] search_jql(self, jql: str, limit: int = 10)", "description": "Performs a JQL search query and returns matching issues with metadata.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] create_issue(self, project_key: str, summary: str, description: Optional[str] = None)", "description": "Creates a new Jira issue in specified project and returns details of the created issue.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "__init__(self, tenant_id: str, request_id: Optional[str] = None)", "scope": "JiraClient", "scopeKind": "class", "description": "unavailable"}, {"name": "httpx.Response do_request(tk: str)", "scope": "JiraClient._request_with_refresh", "scopeKind": "member", "description": "unavailable"}], "calls": ["get_tokens", "save_tokens", "update_meta", "error_response", "httpx.Client", "resp.status_code", "resp.json", "resp.headers", "raise error_response", "next", "setattr", "scope.split", "int", "time.time"], "search-terms": ["JiraClient", "token management", "OAuth 2.0", "Jira API", "project listing", "issue search", "issue creation", "refresh_token", "accessible resources", "rate limiting", "cloud resource discovery"], "state": 2, "file_id": 37, "knowledge_revision": 320, "git_revision": "", "ctags": [{"_type": "tag", "name": "ATLASSIAN_API", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^ATLASSIAN_API = \"https:\\/\\/api.atlassian.com\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ATLASSIAN_AUTH", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^ATLASSIAN_AUTH = \"https:\\/\\/auth.atlassian.com\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DEFAULT_TIMEOUT", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^DEFAULT_TIMEOUT = 20.0$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "EARLY_REFRESH_WINDOW_SEC", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^EARLY_REFRESH_WINDOW_SEC = 120  # refresh if expiring within 2 minutes$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "JiraClient", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^class JiraClient:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "LOG", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^LOG = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^    def __init__(self, tenant_id: str, request_id: Optional[str] = None):$/", "language": "Python", "kind": "member", "signature": "(self, tenant_id: str, request_id: Optional[str] = None)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "_authorized_headers", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^    def _authorized_headers(self, token: str) -> Dict[str, str]:$/", "language": "Python", "typeref": "typename:Dict[str,str]", "kind": "member", "signature": "(self, token: str)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "_cloud_base_and_id", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^    def _cloud_base_and_id(self, access_token: str) -> Tuple[str, str]:$/", "language": "Python", "typeref": "typename:Tuple[str,str]", "kind": "member", "signature": "(self, access_token: str)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "_refresh", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^    def _refresh(self, refresh_token: str) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, refresh_token: str)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "_request_with_refresh", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^    def _request_with_refresh(self, method: str, url: str, json_body: Optional[Dict[str, Any]] =/", "language": "Python", "typeref": "typename:httpx.Response", "kind": "member", "signature": "(self, method: str, url: str, json_body: Optional[Dict[str, Any]] = None, params: Optional[Dict[str, Any]] = None)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "create_issue", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^    def create_issue(self, project_key: str, summary: str, description: Optional[str] = None) ->/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, project_key: str, summary: str, description: Optional[str] = None)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "do_request", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^        def do_request(tk: str) -> httpx.Response:$/", "file": true, "language": "Python", "typeref": "typename:httpx.Response", "kind": "function", "signature": "(tk: str)", "scope": "JiraClient._request_with_refresh", "scopeKind": "member"}, {"_type": "tag", "name": "ensure_tokens", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^    def ensure_tokens(self) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "http_status", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^from fastapi import status as http_status$/", "language": "Python", "kind": "unknown", "nameref": "unknown:status"}, {"_type": "tag", "name": "list_projects", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^    def list_projects(self) -> List[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "member", "signature": "(self)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "search_jql", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^    def search_jql(self, jql: str, limit: int = 10) -> List[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "member", "signature": "(self, jql: str, limit: int = 10)", "scope": "JiraClient", "scopeKind": "class"}], "hash": "abbedc649cd5f8596e63c0a5c7f9d378", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/connectors/jira/client.py", "fields": [{"name": "ATLASSIAN_API = \"https:\\/\\/api.atlassian.com\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ATLASSIAN_AUTH = \"https:\\/\\/auth.atlassian.com\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DEFAULT_TIMEOUT = 20.0", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "EARLY_REFRESH_WINDOW_SEC = 120  # refresh if expiring within 2 minutes", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "LOG = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"320": ""}]}