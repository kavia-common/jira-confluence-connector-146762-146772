{"is_source_file": true, "format": "Python", "description": "This file implements a lightweight Jira REST API client with support for authentication, token refresh, project listing, issue searching, and issue creation. It defines classes for error handling, authentication credentials, and the main client interface, with methods for making API requests, handling responses, and managing tokens.", "external_files": ["requests", "os", "time", "logging"], "external_methods": ["requests.post", "requests.get", "requests.RequestException"], "published": ["JiraClient", "JiraClientError", "JiraAuth"], "classes": [{"name": "JiraClientError", "description": "Custom exception for Jira client errors, including status code and retry info."}, {"name": "JiraAuth", "description": "Holds OAuth tokens, expiration, base URL, and PAT for Jira authentication."}, {"name": "JiraClient", "description": "Main class providing methods to interact with Jira REST API, including project listing, issue searching, and issue creation."}], "methods": [{"name": "Dict[str,str] _headers(self)", "description": "Generates HTTP headers for requests, including Authorization if token is available.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "bool refresh_token_if_needed(self, skew: int = 120)", "description": "Checks if token refresh is needed based on expiration and attempts refresh if necessary.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "bool try_refresh_on_unauthorized(self)", "description": "Attempts to refresh tokens upon receiving an unauthorized response.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "bool _refresh(self)", "description": "Performs token refresh by making a POST request to Atlassian OAuth token URL.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] _handle_response(self, resp: requests.Response)", "description": "Handles HTTP response, raising errors for failure status codes and parsing JSON.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Optional[str] _cloud_id(self)", "description": "Retrieves the cloud ID needed for subsequent API requests via accessible-resources API.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] list_projects(self, limit: int = 25, cursor: Optional[str] = None)", "description": "Lists Jira projects with pagination support.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "List[Dict[str,Any]] search(self, q: str, limit: int = 10, filters: Optional[Dict[str, Any]] = None)", "description": "Searches Jira issues using JQL, returns normalized list of issues.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] create(self, payload: Dict[str, Any])", "description": "Creates Jira issues with provided payload, returns issue details.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "__init__( self, access_token: Optional[str], refresh_token: Optional[str], expires_at: Optional[int], base_url: Optional[str] = None, pat: Optional[str] = None, )", "scope": "JiraAuth", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__(self, auth: JiraAuth, enable_pkce: bool = False, timeout: int = 20)", "scope": "JiraClient", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__(self, message: str, status: Optional[int] = None, retry_after: Optional[int] = None)", "scope": "JiraClientError", "scopeKind": "class", "description": "unavailable"}], "calls": ["requests.post", "requests.get"], "search-terms": ["JiraClient", "OAuth token refresh", "Jira project list", "issue search", "issue create", "accessible-resources API", "cloudId", "JQL"], "state": 2, "file_id": 37, "knowledge_revision": 362, "git_revision": "34482e767cebdcde729a8bc5d9f63e49cd77bc67", "revision_history": [{"320": ""}, {"332": "98c6b59c7482973cee0153f948eb6d1b34db4a07"}, {"345": "98c6b59c7482973cee0153f948eb6d1b34db4a07"}, {"362": "34482e767cebdcde729a8bc5d9f63e49cd77bc67"}], "ctags": [{"_type": "tag", "name": "JIRA_API_ROOT", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^JIRA_API_ROOT = \"https:\\/\\/api.atlassian.com\\/ex\\/jira\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "JiraAuth", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^class JiraAuth:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "JiraClient", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^class JiraClient:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "JiraClientError", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^class JiraClientError(Exception):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^    def __init__($/", "language": "Python", "kind": "member", "signature": "( self, access_token: Optional[str], refresh_token: Optional[str], expires_at: Optional[int], base_url: Optional[str] = None, pat: Optional[str] = None, )", "scope": "JiraAuth", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^    def __init__(self, auth: JiraAuth, enable_pkce: bool = False, timeout: int = 20):$/", "language": "Python", "kind": "member", "signature": "(self, auth: JiraAuth, enable_pkce: bool = False, timeout: int = 20)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^    def __init__(self, message: str, status: Optional[int] = None, retry_after: Optional[int] = /", "language": "Python", "kind": "member", "signature": "(self, message: str, status: Optional[int] = None, retry_after: Optional[int] = None)", "scope": "JiraClientError", "scopeKind": "class"}, {"_type": "tag", "name": "_cloud_id", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^    def _cloud_id(self) -> Optional[str]:$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "member", "signature": "(self)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "_handle_response", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^    def _handle_response(self, resp: requests.Response) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, resp: requests.Response)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "_headers", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^    def _headers(self) -> Dict[str, str]:$/", "language": "Python", "typeref": "typename:Dict[str,str]", "kind": "member", "signature": "(self)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "_refresh", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^    def _refresh(self) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^    def create(self, payload: Dict[str, Any]) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, payload: Dict[str, Any])", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "list_projects", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^    def list_projects(self, limit: int = 25, cursor: Optional[str] = None) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, limit: int = 25, cursor: Optional[str] = None)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^logger = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "refresh_token_if_needed", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^    def refresh_token_if_needed(self, skew: int = 120) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, skew: int = 120)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "search", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^    def search(self, q: str, limit: int = 10, filters: Optional[Dict[str, Any]] = None) -> List[/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "member", "signature": "(self, q: str, limit: int = 10, filters: Optional[Dict[str, Any]] = None)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "try_refresh_on_unauthorized", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/client.py", "pattern": "/^    def try_refresh_on_unauthorized(self) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self)", "scope": "JiraClient", "scopeKind": "class"}], "hash": "9e7d7756fc697b0b1b52c8692fc0af21", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/connectors/jira/client.py", "fields": [{"name": "JIRA_API_ROOT = \"https:\\/\\/api.atlassian.com\\/ex\\/jira\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "logger = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}]}