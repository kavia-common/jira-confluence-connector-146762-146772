{"is_source_file": true, "format": "Python", "description": "This file contains service layer functions wrapping database operations related to users, Jira projects, and Confluence pages. It provides functions for creating, retrieving, and listing entities, as well as upserting (create or update) records based on certain keys.", "external_files": ["sqlalchemy.orm", "sqlalchemy"], "external_methods": ["select", "Session.execute", "Session.get", "Session.add", "Session.commit", "Session.refresh"], "published": ["create_user", "get_user_by_id", "get_user_by_email", "list_users", "upsert_jira_project", "list_jira_projects_for_user", "upsert_confluence_page", "list_confluence_pages_for_user"], "classes": [], "methods": [{"name": "User create_user(db: Session, *, email: str, display_name: Optional[str] = None, jira_token: Optional[str] = None, confluence_token: Optional[str] = None, jira_base_url: Optional[str] = None, confluence_base_url: Optional[str] = None)", "description": "Creates a new user or returns an existing user if one with the same email already exists.", "scope": "", "scopeKind": ""}, {"name": "Optional[User] get_user_by_id(db: Session, user_id: int)", "description": "Retrieves a user by their unique ID.", "scope": "", "scopeKind": ""}, {"name": "Optional[User] get_user_by_email(db: Session, email: str)", "description": "Looks up a user by email, returning None if not found.", "scope": "", "scopeKind": ""}, {"name": "List[User] list_users(db: Session)", "description": "Returns a list of all users in the database.", "scope": "", "scopeKind": ""}, {"name": "JiraProject upsert_jira_project(db: Session, *, owner_id: int, key: str, name: str, lead: Optional[str] = None, url: Optional[str] = None)", "description": "Creates or updates a Jira project record associated with an owner, identified by owner_id and project key.", "scope": "", "scopeKind": ""}, {"name": "List[JiraProject] list_jira_projects_for_user(db: Session, owner_id: int)", "description": "Lists all Jira projects associated with a specific user, ordered by project key.", "scope": "", "scopeKind": ""}, {"name": "ConfluencePage upsert_confluence_page(db: Session, *, owner_id: int, space_key: str, page_id: str, title: str, url: Optional[str] = None)", "description": "Creates or updates a Confluence page record associated with an owner, identified by owner_id, space_key, and page_id.", "scope": "", "scopeKind": ""}, {"name": "List[ConfluencePage] list_confluence_pages_for_user(db: Session, owner_id: int)", "description": "Lists all Confluence pages associated with a specific user, ordered by title.", "scope": "", "scopeKind": ""}], "calls": ["select(User).where(User.email == email)", "db.execute(select(User).where(User.email == email))", "db.get(User, user_id)", "select(JiraProject).where(JiraProject.owner_id == owner_id, JiraProject.key == key)", "db.execute(stmt)", "select(ConfluencePage).where(ConfluencePage.owner_id == owner_id, ...)", "list(db.execute(stmt).scalars())"], "search-terms": ["service layer", "database operations", "JiraProject", "ConfluencePage", "User", "upsert", "list all users", "create or update Jira project", "list confluence pages", "session management"], "state": 2, "file_id": 8, "knowledge_revision": 476, "git_revision": "d17636374379257ba72b67228f5085372200c751", "revision_history": [{"17": ""}, {"476": "d17636374379257ba72b67228f5085372200c751"}], "ctags": [{"_type": "tag", "name": "create_user", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/service.py", "pattern": "/^def create_user(db: Session, *, email: str, display_name: Optional[str] = None,$/", "language": "Python", "typeref": "typename:User", "kind": "function", "signature": "(db: Session, *, email: str, display_name: Optional[str] = None, jira_token: Optional[str] = None, confluence_token: Optional[str] = None, jira_base_url: Optional[str] = None, confluence_base_url: Optional[str] = None)"}, {"_type": "tag", "name": "get_user_by_email", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/service.py", "pattern": "/^def get_user_by_email(db: Session, email: str) -> Optional[User]:$/", "language": "Python", "typeref": "typename:Optional[User]", "kind": "function", "signature": "(db: Session, email: str)"}, {"_type": "tag", "name": "get_user_by_id", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/service.py", "pattern": "/^def get_user_by_id(db: Session, user_id: int) -> Optional[User]:$/", "language": "Python", "typeref": "typename:Optional[User]", "kind": "function", "signature": "(db: Session, user_id: int)"}, {"_type": "tag", "name": "list_confluence_pages_for_user", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/service.py", "pattern": "/^def list_confluence_pages_for_user(db: Session, owner_id: int) -> List[ConfluencePage]:$/", "language": "Python", "typeref": "typename:List[ConfluencePage]", "kind": "function", "signature": "(db: Session, owner_id: int)"}, {"_type": "tag", "name": "list_jira_projects_for_user", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/service.py", "pattern": "/^def list_jira_projects_for_user(db: Session, owner_id: int) -> List[JiraProject]:$/", "language": "Python", "typeref": "typename:List[JiraProject]", "kind": "function", "signature": "(db: Session, owner_id: int)"}, {"_type": "tag", "name": "list_users", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/service.py", "pattern": "/^def list_users(db: Session) -> List[User]:$/", "language": "Python", "typeref": "typename:List[User]", "kind": "function", "signature": "(db: Session)"}, {"_type": "tag", "name": "upsert_confluence_page", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/service.py", "pattern": "/^def upsert_confluence_page(db: Session, *, owner_id: int, space_key: str, page_id: str,$/", "language": "Python", "typeref": "typename:ConfluencePage", "kind": "function", "signature": "(db: Session, *, owner_id: int, space_key: str, page_id: str, title: str, url: Optional[str] = None)"}, {"_type": "tag", "name": "upsert_jira_project", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/service.py", "pattern": "/^def upsert_jira_project(db: Session, *, owner_id: int, key: str, name: str,$/", "language": "Python", "typeref": "typename:JiraProject", "kind": "function", "signature": "(db: Session, *, owner_id: int, key: str, name: str, lead: Optional[str] = None, url: Optional[str] = None)"}], "hash": "7519fa6d7b2802395c154ce1f4726825", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/db/service.py"}