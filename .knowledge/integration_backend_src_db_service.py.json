{"is_source_file": true, "format": "Python", "description": "This file defines service layer functions for interacting with a database, specifically for managing users, Jira projects, and Confluence pages. It contains functions to create, retrieve, list, and upsert these entities, acting as an abstraction over direct database operations.", "external_files": ["sqlalchemy.orm", "sqlalchemy"], "external_methods": ["select", "db.execute", "db.get", "db.add", "db.commit", "db.refresh"], "published": ["create_user", "get_user_by_id", "list_users", "upsert_jira_project", "list_jira_projects_for_user", "upsert_confluence_page", "list_confluence_pages_for_user"], "classes": [], "methods": [{"name": "User create_user(db: Session, *, email: str, display_name: Optional[str] = None, jira_token: Optional[str] = None, confluence_token: Optional[str] = None, jira_base_url: Optional[str] = None, confluence_base_url: Optional[str] = None)", "description": "Creates a new user or returns existing user by email if found. It is an idempotent operation.", "scope": "", "scopeKind": ""}, {"name": "Optional[User] get_user_by_id(db: Session, user_id: int)", "description": "Retrieves a user by their unique ID.", "scope": "", "scopeKind": ""}, {"name": "List[User] list_users(db: Session)", "description": "Returns a list of all users in the database, ordered by ID descending.", "scope": "", "scopeKind": ""}, {"name": "JiraProject upsert_jira_project(db: Session, *, owner_id: int, key: str, name: str, lead: Optional[str] = None, url: Optional[str] = None)", "description": "Creates or updates a JiraProject entry identified by owner_id and key.", "scope": "", "scopeKind": ""}, {"name": "List[JiraProject] list_jira_projects_for_user(db: Session, owner_id: int)", "description": "Lists all Jira projects associated with a specific owner (user).", "scope": "", "scopeKind": ""}, {"name": "ConfluencePage upsert_confluence_page(db: Session, *, owner_id: int, space_key: str, page_id: str, title: str, url: Optional[str] = None)", "description": "Creates or updates a ConfluencePage entry identified by owner_id, space_key, and page_id.", "scope": "", "scopeKind": ""}, {"name": "List[ConfluencePage] list_confluence_pages_for_user(db: Session, owner_id: int)", "description": "Lists all Confluence pages associated with a specific owner (user).", "scope": "", "scopeKind": ""}], "calls": ["db.execute", "db.get", "db.add", "db.commit", "db.refresh"], "search-terms": ["service layer", "database operations", "JiraProject", "ConfluencePage", "user management", "upsert"], "state": 2, "file_id": 8, "knowledge_revision": 17, "git_revision": "", "ctags": [{"_type": "tag", "name": "create_user", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/service.py", "pattern": "/^def create_user(db: Session, *, email: str, display_name: Optional[str] = None,$/", "language": "Python", "typeref": "typename:User", "kind": "function", "signature": "(db: Session, *, email: str, display_name: Optional[str] = None, jira_token: Optional[str] = None, confluence_token: Optional[str] = None, jira_base_url: Optional[str] = None, confluence_base_url: Optional[str] = None)"}, {"_type": "tag", "name": "get_user_by_id", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/service.py", "pattern": "/^def get_user_by_id(db: Session, user_id: int) -> Optional[User]:$/", "language": "Python", "typeref": "typename:Optional[User]", "kind": "function", "signature": "(db: Session, user_id: int)"}, {"_type": "tag", "name": "list_confluence_pages_for_user", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/service.py", "pattern": "/^def list_confluence_pages_for_user(db: Session, owner_id: int) -> List[ConfluencePage]:$/", "language": "Python", "typeref": "typename:List[ConfluencePage]", "kind": "function", "signature": "(db: Session, owner_id: int)"}, {"_type": "tag", "name": "list_jira_projects_for_user", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/service.py", "pattern": "/^def list_jira_projects_for_user(db: Session, owner_id: int) -> List[JiraProject]:$/", "language": "Python", "typeref": "typename:List[JiraProject]", "kind": "function", "signature": "(db: Session, owner_id: int)"}, {"_type": "tag", "name": "list_users", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/service.py", "pattern": "/^def list_users(db: Session) -> List[User]:$/", "language": "Python", "typeref": "typename:List[User]", "kind": "function", "signature": "(db: Session)"}, {"_type": "tag", "name": "upsert_confluence_page", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/service.py", "pattern": "/^def upsert_confluence_page(db: Session, *, owner_id: int, space_key: str, page_id: str,$/", "language": "Python", "typeref": "typename:ConfluencePage", "kind": "function", "signature": "(db: Session, *, owner_id: int, space_key: str, page_id: str, title: str, url: Optional[str] = None)"}, {"_type": "tag", "name": "upsert_jira_project", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/service.py", "pattern": "/^def upsert_jira_project(db: Session, *, owner_id: int, key: str, name: str,$/", "language": "Python", "typeref": "typename:JiraProject", "kind": "function", "signature": "(db: Session, *, owner_id: int, key: str, name: str, lead: Optional[str] = None, url: Optional[str] = None)"}], "hash": "365fb9ad814ac641f84f8273e1d7e47e", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/db/service.py", "revision_history": [{"17": ""}]}