{"is_source_file": true, "format": "Python", "description": "This Python file defines FastAPI routes for handling Atlassian OAuth 2.0 (3LO) with PKCE. It manages login initiation, callback processing, token refresh, resource listing, and configuration retrieval related to Atlassian OAuth flows, including session management and cookie handling.", "external_files": ["./oauth_pkce", "./oauth_settings"], "external_methods": ["generate_code_verifier", "generate_code_challenge", "generate_state", "get_or_create_session_id", "save_session", "get_session", "save_tokens", "get_atlassian_oauth_config", "get_default_scopes"], "published": ["/api/oauth/atlassian/login", "/api/oauth/callback/atlassian", "/api/oauth/atlassian/refresh", "/api/atlassian/resources", "/api/config"], "classes": [], "methods": [{"name": "None _set_session_cookie(resp: Response, session_id: str)", "description": "Sets a secure, HTTP-only, SameSite=Lax cookie 'sid' with a session ID, with a max age of 14 days.", "scope": "", "scopeKind": ""}, {"name": "atlassian_login(request: Request, state: Optional[str] = None, scope: Optional[str] = None)", "description": "Initiates OAuth login by generating PKCE parameters, saving session data, and redirecting to Atlassian authorization URL.", "scope": "", "scopeKind": ""}, {"name": "atlassian_callback(request: Request, code: Optional[str] = None, state: Optional[str] = None)", "description": "Handles the OAuth callback by validating state, exchanging authorization code for tokens, saving tokens, and redirecting to frontend.", "scope": "", "scopeKind": ""}, {"name": "atlassian_refresh(request: Request)", "description": "Uses stored refresh token to obtain a new access token and returns safe token info.", "scope": "", "scopeKind": ""}, {"name": "list_accessible_resources(request: Request)", "description": "Fetches and returns a list of Atlassian accessible cloud resources using the current access token.", "scope": "", "scopeKind": ""}, {"name": "get_effective_config()", "description": "Returns current effective configuration URLs for diagnostics, sourced from environment.", "scope": "", "scopeKind": ""}], "calls": ["get_atlassian_oauth_config", "get_default_scopes", "generate_code_verifier", "generate_code_challenge", "generate_state", "get_or_create_session_id", "save_session", "get_session", "save_tokens", "httpx.AsyncClient", "urllib.parse.quote_plus", "urllib.parse.unquote_plus"], "search-terms": ["Atlassian OAuth", "PKCE", "OAuth callback", "session cookie", "refresh token", "resources list", "FastAPI OAuth", "session management", "authorization code exchange", "OAuth flow"], "state": 2, "file_id": 15, "knowledge_revision": 72, "git_revision": "c93612d2bfe887131d75d6aa4e2e91677266f41a", "revision_history": [{"54": ""}, {"62": "837fa352878d17e969ace40bf39f6914f4a39086"}, {"63": "837fa352878d17e969ace40bf39f6914f4a39086"}, {"64": "837fa352878d17e969ace40bf39f6914f4a39086"}, {"71": "c93612d2bfe887131d75d6aa4e2e91677266f41a"}, {"72": "c93612d2bfe887131d75d6aa4e2e91677266f41a"}], "ctags": [{"_type": "tag", "name": "_set_session_cookie", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/oauth_atlassian.py", "pattern": "/^def _set_session_cookie(resp: Response, session_id: str) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(resp: Response, session_id: str)"}, {"_type": "tag", "name": "atlassian_callback", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/oauth_atlassian.py", "pattern": "/^async def atlassian_callback(request: Request, code: Optional[str] = None, state: Optional[str] /", "language": "Python", "kind": "function", "signature": "(request: Request, code: Optional[str] = None, state: Optional[str] = None)"}, {"_type": "tag", "name": "atlassian_login", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/oauth_atlassian.py", "pattern": "/^async def atlassian_login(request: Request, state: Optional[str] = None, scope: Optional[str] = /", "language": "Python", "kind": "function", "signature": "(request: Request, state: Optional[str] = None, scope: Optional[str] = None)"}, {"_type": "tag", "name": "atlassian_refresh", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/oauth_atlassian.py", "pattern": "/^async def atlassian_refresh(request: Request):$/", "language": "Python", "kind": "function", "signature": "(request: Request)"}, {"_type": "tag", "name": "get_effective_config", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/oauth_atlassian.py", "pattern": "/^async def get_effective_config():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "list_accessible_resources", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/oauth_atlassian.py", "pattern": "/^async def list_accessible_resources(request: Request):$/", "language": "Python", "kind": "function", "signature": "(request: Request)"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/oauth_atlassian.py", "pattern": "/^router = APIRouter()$/", "language": "Python", "kind": "variable"}], "hash": "d2a72aaa0e4ed0e2d6d81883c865a0f5", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/api/oauth_atlassian.py", "fields": [{"name": "router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}]}