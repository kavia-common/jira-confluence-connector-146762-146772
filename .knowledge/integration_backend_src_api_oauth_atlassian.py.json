{"is_source_file": true, "format": "Python", "description": "This is a Python source file defining FastAPI routes for handling OAuth 2.0 authentication flows with Atlassian products (Jira and Atlassian Cloud). It includes endpoints for starting OAuth flows, handling callbacks, refreshing tokens, listing resources, and legacy support for non-PKCE flows, all within a web service context.", "external_files": [".oauth_pkce", ".oauth_settings", ".oauth_config"], "external_methods": ["generate_code_verifier", "generate_code_challenge", "generate_state", "get_or_create_session_id", "save_session", "get_session", "save_tokens", "get_atlassian_oauth_config", "get_default_scopes", "get_jira_oauth_config", "get_frontend_base_url_default"], "published": ["jira_get_oauth_url", "jira_login_alias", "atlassian_login", "jira_login_legacy", "oauth_start", "list_routes", "atlassian_callback", "atlassian_refresh", "list_accessible_resources", "jira_callback_legacy", "get_effective_config"], "classes": [], "methods": [{"name": "jira_get_oauth_url(state: Optional[str] = None, scope: Optional[str] = None)", "description": "Returns a JSON with the Atlassian OAuth authorization URL for Jira, with optional state and scope query parameters.", "scope": "", "scopeKind": ""}, {"name": "jira_login_alias(request: Request, state: Optional[str] = None, scope: Optional[str] = None, return_url: Optional[str] = None)", "description": "Redirects to /auth/jira/login, forwarding query parameters, serving as a compatibility alias.", "scope": "", "scopeKind": ""}, {"name": "atlassian_login(request: Request, state: Optional[str] = None, scope: Optional[str] = None)", "description": "Initiates the OAuth flow with Atlassian for OAuth2 PKCE, generating code verifier and state, and redirecting to Atlassian's authorization URL.", "scope": "", "scopeKind": ""}, {"name": "jira_login_legacy(state: Optional[str] = None, scope: Optional[str] = None)", "description": "Starts a legacy Jira OAuth 2.0 flow (non-PKCE) with client secret, redirecting to Atlassian.", "scope": "", "scopeKind": ""}, {"name": "oauth_start(request: Request)", "description": "Legacy shim endpoint redirecting to /api/oauth/atlassian/login, supporting return_url parameter.", "scope": "", "scopeKind": ""}, {"name": "list_routes(request: Request)", "description": "Provides a diagnostic listing of all registered routes in the FastAPI application.", "scope": "", "scopeKind": ""}, {"name": "atlassian_callback(request: Request, code: Optional[str] = None, state: Optional[str] = None)", "description": "Handles the OAuth callback from Atlassian, exchanges code for tokens, and redirects to frontend.", "scope": "", "scopeKind": ""}, {"name": "atlassian_refresh(request: Request)", "description": "Uses stored refresh_token to obtain a new access_token, updating session.", "scope": "", "scopeKind": ""}, {"name": "list_accessible_resources(request: Request)", "description": "Calls Atlassian API to list accessible cloud resources using the stored access token.", "scope": "", "scopeKind": ""}, {"name": "jira_callback_legacy(request: Request, code: Optional[str] = None, state: Optional[str] = None)", "description": "Legacy handler for Jira OAuth callback (non-PKCE), exchanges code for tokens and redirects back to frontend.", "scope": "", "scopeKind": ""}, {"name": "get_effective_config()", "description": "Returns current effective configuration for debugging, including base URLs and redirect URI information.", "scope": "", "scopeKind": ""}, {"name": "None _set_session_cookie(resp: Response, session_id: str)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["get_jira_oauth_config", "get_atlassian_oauth_config", "get_default_scopes", "generate_code_verifier", "generate_code_challenge", "generate_state", "get_or_create_session_id", "save_session", "get_session", "save_tokens", "get_frontend_base_url_default", "httpx.AsyncClient", "urllib.parse.urlencode", "urllib.parse.quote_plus"], "search-terms": ["Atlassian OAuth", "PKCE", "Jira OAuth", "OAuth callback", "OAuth token refresh", "session management", "FastAPI OAuth endpoints", "list registered routes", "legacy OAuth flow", "resource listing"], "state": 2, "file_id": 15, "knowledge_revision": 174, "git_revision": "7b7d55cc7c9f099a68328a94239099973fb01ef4", "revision_history": [{"54": ""}, {"62": "837fa352878d17e969ace40bf39f6914f4a39086"}, {"63": "837fa352878d17e969ace40bf39f6914f4a39086"}, {"64": "837fa352878d17e969ace40bf39f6914f4a39086"}, {"71": "c93612d2bfe887131d75d6aa4e2e91677266f41a"}, {"72": "c93612d2bfe887131d75d6aa4e2e91677266f41a"}, {"82": "e8e3b6b27369df561751d9f3714fa96ba8473925"}, {"91": "bfdff7245da8e6ccd5a638f7c0975df5e7722a10"}, {"92": "bfdff7245da8e6ccd5a638f7c0975df5e7722a10"}, {"99": "a49d74ce2b4dbb9d625dc75710bb24953cac1b24"}, {"100": "a49d74ce2b4dbb9d625dc75710bb24953cac1b24"}, {"103": "31c224f85b3a8ac8246306807a1e22e3a731efd7"}, {"104": "31c224f85b3a8ac8246306807a1e22e3a731efd7"}, {"105": "31c224f85b3a8ac8246306807a1e22e3a731efd7"}, {"107": "d230454ff52a62b345d74cd3be8a262a941138ad"}, {"108": "d230454ff52a62b345d74cd3be8a262a941138ad"}, {"109": "d230454ff52a62b345d74cd3be8a262a941138ad"}, {"111": "1b779cd35659f812309db714f51620af13446bdc"}, {"113": "90e97a63167182db3ea159c656a00318a81f1cb2"}, {"174": "7b7d55cc7c9f099a68328a94239099973fb01ef4"}], "ctags": [{"_type": "tag", "name": "_set_session_cookie", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/oauth_atlassian.py", "pattern": "/^def _set_session_cookie(resp: Response, session_id: str) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(resp: Response, session_id: str)"}, {"_type": "tag", "name": "atlassian_callback", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/oauth_atlassian.py", "pattern": "/^async def atlassian_callback(request: Request, code: Optional[str] = None, state: Optional[str] /", "language": "Python", "kind": "function", "signature": "(request: Request, code: Optional[str] = None, state: Optional[str] = None)"}, {"_type": "tag", "name": "atlassian_login", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/oauth_atlassian.py", "pattern": "/^async def atlassian_login(request: Request, state: Optional[str] = None, scope: Optional[str] = /", "language": "Python", "kind": "function", "signature": "(request: Request, state: Optional[str] = None, scope: Optional[str] = None)"}, {"_type": "tag", "name": "atlassian_refresh", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/oauth_atlassian.py", "pattern": "/^async def atlassian_refresh(request: Request):$/", "language": "Python", "kind": "function", "signature": "(request: Request)"}, {"_type": "tag", "name": "get_effective_config", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/oauth_atlassian.py", "pattern": "/^async def get_effective_config():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "jira_callback_legacy", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/oauth_atlassian.py", "pattern": "/^async def jira_callback_legacy(request: Request, code: Optional[str] = None, state: Optional[str/", "language": "Python", "kind": "function", "signature": "(request: Request, code: Optional[str] = None, state: Optional[str] = None)"}, {"_type": "tag", "name": "jira_get_oauth_url", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/oauth_atlassian.py", "pattern": "/^async def jira_get_oauth_url(state: Optional[str] = None, scope: Optional[str] = None):$/", "language": "Python", "kind": "function", "signature": "(state: Optional[str] = None, scope: Optional[str] = None)"}, {"_type": "tag", "name": "jira_login_alias", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/oauth_atlassian.py", "pattern": "/^async def jira_login_alias(request: Request, state: Optional[str] = None, scope: Optional[str] =/", "language": "Python", "kind": "function", "signature": "(request: Request, state: Optional[str] = None, scope: Optional[str] = None, return_url: Optional[str] = None)"}, {"_type": "tag", "name": "jira_login_legacy", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/oauth_atlassian.py", "pattern": "/^async def jira_login_legacy(state: Optional[str] = None, scope: Optional[str] = None):$/", "language": "Python", "kind": "function", "signature": "(state: Optional[str] = None, scope: Optional[str] = None)"}, {"_type": "tag", "name": "list_accessible_resources", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/oauth_atlassian.py", "pattern": "/^async def list_accessible_resources(request: Request):$/", "language": "Python", "kind": "function", "signature": "(request: Request)"}, {"_type": "tag", "name": "list_routes", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/oauth_atlassian.py", "pattern": "/^async def list_routes(request: Request):$/", "language": "Python", "kind": "function", "signature": "(request: Request)"}, {"_type": "tag", "name": "oauth_start", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/oauth_atlassian.py", "pattern": "/^async def oauth_start(request: Request):$/", "language": "Python", "kind": "function", "signature": "(request: Request)"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/oauth_atlassian.py", "pattern": "/^router = APIRouter()$/", "language": "Python", "kind": "variable"}], "hash": "5a20d3d19124850ed7874a8db42f5908", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/api/oauth_atlassian.py", "fields": [{"name": "router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}]}