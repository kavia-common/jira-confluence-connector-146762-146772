{"is_source_file": true, "format": "Python", "description": "This file contains test cases for OAuth callback endpoints of Jira and Confluence integrations in a FastAPI application. It sets up environment variables, mocks external HTTP calls, and verifies user creation and token storage during OAuth redirect handling.", "external_files": ["os", "sys", "typing", "fastapi.testclient", "httpx", "src.api.main", "src.db.config", "src.db.models"], "external_methods": ["os.path.abspath", "os.path.join", "os.path.exists", "os.environ", "sys.path.append", "httpx.AsyncClient", "fastapi.testclient.TestClient", "src.db.config.SessionLocal", "src.db.models.User"], "published": [], "classes": [{"name": "DummyResp", "description": "A dummy response class to mimic HTTP responses in tests, returning a preset JSON payload and status code."}, {"name": "DummyAsyncClient", "description": "A mock asynchronous HTTP client that simulates OAuth token exchange responses during tests."}], "methods": [{"name": "_patch_httpx(monkeypatch)", "description": "Replaces httpx.AsyncClient with DummyAsyncClient during tests to mock HTTP interactions.", "scope": "", "scopeKind": ""}, {"name": "_clear_users()", "description": "Clears all User entries from the test database to ensure test isolation.", "scope": "", "scopeKind": ""}, {"name": "test_jira_callback_accepts_standard_state_without_raw_state(monkeypatch)", "description": "Tests OAuth callback handling when a standard 'state' parameter is provided without raw state info.", "scope": "", "scopeKind": ""}, {"name": "test_jira_callback_creates_placeholder_user_when_none(monkeypatch)", "description": "Verifies that a placeholder user is created if no user exists for the given OAuth callback.", "scope": "", "scopeKind": ""}, {"name": "test_jira_callback_uses_user_id_from_state(monkeypatch)", "description": "Checks that the callback correctly associates tokens with an existing user identified via 'state'.", "scope": "", "scopeKind": ""}, {"name": "test_confluence_callback_creates_placeholder_user_when_none(monkeypatch)", "description": "Ensures that a placeholder user is created during Confluence OAuth callback when none exists.", "scope": "", "scopeKind": ""}, {"name": "__aenter__(self)", "scope": "DummyAsyncClient", "scopeKind": "class", "description": "unavailable"}, {"name": "__aexit__(self, exc_type, exc, tb)", "scope": "DummyAsyncClient", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__(self, *args, **kwargs)", "scope": "DummyAsyncClient", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__(self, payload: dict[str, Any], status_code: int = 200)", "scope": "DummyResp", "scopeKind": "class", "description": "unavailable"}, {"name": "json(self)", "scope": "DummyResp", "scopeKind": "class", "description": "unavailable"}, {"name": "post(self, url, json_payload=None, headers=None)", "scope": "DummyAsyncClient", "scopeKind": "class", "description": "unavailable"}], "calls": ["os.path.abspath", "os.path.join", "os.path.exists", "os.environ.__setitem__", "sys.path.append", "httpx.AsyncClient", "fastapi.testclient.TestClient", "src.db.config.SessionLocal", "src.db.models.User.query", "User.delete", "db.commit", "db.refresh"], "search-terms": ["OAuth callback", "Jira OAuth test", "Confluence OAuth test", "test database setup", "mock HTTPX", "FastAPI TestClient", "environment variable setup"], "state": 2, "file_id": 16, "knowledge_revision": 128, "git_revision": "26585c70d51c695043da52f7d66c117f43aac048", "revision_history": [{"106": ""}, {"112": "d17636374379257ba72b67228f5085372200c751"}, {"121": "d17636374379257ba72b67228f5085372200c751"}, {"127": "26585c70d51c695043da52f7d66c117f43aac048"}, {"128": "26585c70d51c695043da52f7d66c117f43aac048"}], "ctags": [{"_type": "tag", "name": "BASE_DIR", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^BASE_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), \"..\"))$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DummyAsyncClient", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^class DummyAsyncClient:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "DummyResp", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^class DummyResp:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TEST_DB_PATH", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^TEST_DB_PATH = os.path.join(BASE_DIR, \"test_integration.db\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "__aenter__", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^    async def __aenter__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "DummyAsyncClient", "scopeKind": "class"}, {"_type": "tag", "name": "__aexit__", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^    async def __aexit__(self, exc_type, exc, tb):$/", "language": "Python", "kind": "member", "signature": "(self, exc_type, exc, tb)", "scope": "DummyAsyncClient", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^    def __init__(self, *args, **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, *args, **kwargs)", "scope": "DummyAsyncClient", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^    def __init__(self, payload: dict[str, Any], status_code: int = 200):$/", "language": "Python", "kind": "member", "signature": "(self, payload: dict[str, Any], status_code: int = 200)", "scope": "DummyResp", "scopeKind": "class"}, {"_type": "tag", "name": "_clear_users", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^def _clear_users():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_patch_httpx", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^def _patch_httpx(monkeypatch):$/", "language": "Python", "kind": "function", "signature": "(monkeypatch)"}, {"_type": "tag", "name": "json", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^    def json(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "DummyResp", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^    async def post(self, url, json_payload=None, headers=None):$/", "language": "Python", "kind": "member", "signature": "(self, url, json_payload=None, headers=None)", "scope": "DummyAsyncClient", "scopeKind": "class"}, {"_type": "tag", "name": "test_confluence_callback_creates_placeholder_user_when_none", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^def test_confluence_callback_creates_placeholder_user_when_none(monkeypatch):$/", "language": "Python", "kind": "function", "signature": "(monkeypatch)"}, {"_type": "tag", "name": "test_jira_callback_accepts_standard_state_without_raw_state", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^def test_jira_callback_accepts_standard_state_without_raw_state(monkeypatch):$/", "language": "Python", "kind": "function", "signature": "(monkeypatch)"}, {"_type": "tag", "name": "test_jira_callback_creates_placeholder_user_when_none", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^def test_jira_callback_creates_placeholder_user_when_none(monkeypatch):$/", "language": "Python", "kind": "function", "signature": "(monkeypatch)"}, {"_type": "tag", "name": "test_jira_callback_uses_user_id_from_state", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^def test_jira_callback_uses_user_id_from_state(monkeypatch):$/", "language": "Python", "kind": "function", "signature": "(monkeypatch)"}], "hash": "31f8c8631fb8a42a160560bae13c5b7d", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/tests/test_oauth_callbacks.py", "fields": [{"name": "BASE_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), \"..\"))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_DB_PATH = os.path.join(BASE_DIR, \"test_integration.db\")", "scope": "", "scopeKind": "", "description": "unavailable"}]}