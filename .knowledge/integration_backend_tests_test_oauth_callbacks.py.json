{"is_source_file": true, "format": "Python", "description": "This file contains test cases for OAuth callback handling in a FastAPI-based application, focusing on Jira and Confluence OAuth flows. It sets up environment variables, mocks external HTTP requests, and verifies user creation and token storage behavior during OAuth callback endpoints.", "external_files": ["src.api.main", "src.db.config", "src.db.models", "fastapi.testclient", "httpx"], "external_methods": ["fastapi.testclient.TestClient", "httpx.AsyncClient"], "published": ["test_jira_callback_accepts_standard_state_without_state", "test_jira_callback_creates_placeholder_user_when_none", "test_jira_callback_uses_user_id_from_state", "test_confluence_callback_creates_placeholder_user_when_none"], "classes": [{"name": "DummyResp", "description": "A mock response class simulating HTTP responses with JSON payloads."}, {"name": "DummyAsyncClient", "description": "A mock asynchronous HTTP client that always returns a successful token exchange response."}], "methods": [{"name": "_patch_httpx(monkeypatch)", "description": "Replaces httpx.AsyncClient with DummyAsyncClient for testing.", "scope": "", "scopeKind": ""}, {"name": "_clear_users()", "description": "Clears all User entries from the test database before each test.", "scope": "", "scopeKind": ""}, {"name": "test_jira_callback_accepts_standard_state_without_state(monkeypatch)", "description": "Tests OAuth callback handling when 'state' is provided without 'state', verifying user creation and token storage.", "scope": "", "scopeKind": ""}, {"name": "test_jira_callback_creates_placeholder_user_when_none(monkeypatch)", "description": "Ensures that a placeholder user is created if none exists at the OAuth callback URL.", "scope": "", "scopeKind": ""}, {"name": "test_jira_callback_uses_user_id_from_state(monkeypatch)", "description": "Checks that the user ID provided in the 'state' parameter is used to assign tokens to the correct user.", "scope": "", "scopeKind": ""}, {"name": "test_confluence_callback_creates_placeholder_user_when_none(monkeypatch)", "description": "Verifies that OAuth callback for Confluence creates a placeholder user with tokens if no pre-existing user is found.", "scope": "", "scopeKind": ""}, {"name": "__aenter__(self)", "scope": "DummyAsyncClient", "scopeKind": "class", "description": "unavailable"}, {"name": "__aexit__(self, exc_type, exc, tb)", "scope": "DummyAsyncClient", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__(self, *args, **kwargs)", "scope": "DummyAsyncClient", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__(self, payload: dict[str, Any], status_code: int = 200)", "scope": "DummyResp", "scopeKind": "class", "description": "unavailable"}, {"name": "json(self)", "scope": "DummyResp", "scopeKind": "class", "description": "unavailable"}, {"name": "post(self, url, json_payload=None, headers=None)", "scope": "DummyAsyncClient", "scopeKind": "class", "description": "unavailable"}], "calls": ["httpx.AsyncClient", "os.path.abspath", "os.path.join", "os.environ.__setitem__", "os.path.exists", "os.remove", "db.query", "db.delete", "db.commit", "SessionLocal", "app"], "search-terms": ["test_oauth_callbacks", "jira_callback", "confluence_callback", "OAuth", "user creation", "token storage", "mock HTTPX", "FastAPI TestClient"], "state": 2, "file_id": 16, "knowledge_revision": 121, "git_revision": "d17636374379257ba72b67228f5085372200c751", "revision_history": [{"106": ""}, {"112": "d17636374379257ba72b67228f5085372200c751"}, {"121": "d17636374379257ba72b67228f5085372200c751"}], "ctags": [{"_type": "tag", "name": "BASE_DIR", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^BASE_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), \"..\"))$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DummyAsyncClient", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^class DummyAsyncClient:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "DummyResp", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^class DummyResp:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TEST_DB_PATH", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^TEST_DB_PATH = os.path.join(BASE_DIR, \"test_integration.db\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "__aenter__", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^    async def __aenter__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "DummyAsyncClient", "scopeKind": "class"}, {"_type": "tag", "name": "__aexit__", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^    async def __aexit__(self, exc_type, exc, tb):$/", "language": "Python", "kind": "member", "signature": "(self, exc_type, exc, tb)", "scope": "DummyAsyncClient", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^    def __init__(self, *args, **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, *args, **kwargs)", "scope": "DummyAsyncClient", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^    def __init__(self, payload: dict[str, Any], status_code: int = 200):$/", "language": "Python", "kind": "member", "signature": "(self, payload: dict[str, Any], status_code: int = 200)", "scope": "DummyResp", "scopeKind": "class"}, {"_type": "tag", "name": "_clear_users", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^def _clear_users():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_patch_httpx", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^def _patch_httpx(monkeypatch):$/", "language": "Python", "kind": "function", "signature": "(monkeypatch)"}, {"_type": "tag", "name": "json", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^    def json(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "DummyResp", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^    async def post(self, url, json_payload=None, headers=None):$/", "language": "Python", "kind": "member", "signature": "(self, url, json_payload=None, headers=None)", "scope": "DummyAsyncClient", "scopeKind": "class"}, {"_type": "tag", "name": "test_confluence_callback_creates_placeholder_user_when_none", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^def test_confluence_callback_creates_placeholder_user_when_none(monkeypatch):$/", "language": "Python", "kind": "function", "signature": "(monkeypatch)"}, {"_type": "tag", "name": "test_jira_callback_accepts_standard_state_without_state", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^def test_jira_callback_accepts_standard_state_without_state(monkeypatch):$/", "language": "Python", "kind": "function", "signature": "(monkeypatch)"}, {"_type": "tag", "name": "test_jira_callback_creates_placeholder_user_when_none", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^def test_jira_callback_creates_placeholder_user_when_none(monkeypatch):$/", "language": "Python", "kind": "function", "signature": "(monkeypatch)"}, {"_type": "tag", "name": "test_jira_callback_uses_user_id_from_state", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^def test_jira_callback_uses_user_id_from_state(monkeypatch):$/", "language": "Python", "kind": "function", "signature": "(monkeypatch)"}], "hash": "04a0f792e556a5220b40ed94e4a912b6", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/tests/test_oauth_callbacks.py", "fields": [{"name": "BASE_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), \"..\"))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_DB_PATH = os.path.join(BASE_DIR, \"test_integration.db\")", "scope": "", "scopeKind": "", "description": "unavailable"}]}