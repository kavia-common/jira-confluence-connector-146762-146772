{"is_source_file": true, "format": "Python", "description": "This file contains test cases for OAuth callback endpoints for Jira and Confluence in a FastAPI application. It sets up environment variables, mocks HTTP responses, manages database state, and verifies that user records are created or updated appropriately after OAuth callback handling.", "external_files": ["fastapi.testclient", "httpx", "src.api.main", "src.db.config", "src.db.models"], "external_methods": ["fastapi.testclient.TestClient", "httpx.AsyncClient"], "published": [], "classes": [{"name": "DummyResp", "description": "Mock response object simulating an HTTP response with JSON payload and status code."}, {"name": "DummyAsyncClient", "description": "Mock asynchronous HTTP client that always returns a successful token exchange response."}], "methods": [{"name": "_patch_httpx(monkeypatch)", "description": "Replaces httpx.AsyncClient with DummyAsyncClient for testing.", "scope": "", "scopeKind": ""}, {"name": "_clear_users()", "description": "Removes all user records from the test database to ensure test isolation.", "scope": "", "scopeKind": ""}, {"name": "test_jira_callback_creates_placeholder_user_when_none(monkeypatch)", "description": "Tests that a new user is created with OAuth tokens after Jira OAuth callback when no user exists.", "scope": "", "scopeKind": ""}, {"name": "test_jira_callback_uses_user_id_from_state(monkeypatch)", "description": "Ensures OAuth callback updates the correct existing user based on user ID passed in the state parameter.", "scope": "", "scopeKind": ""}, {"name": "test_confluence_callback_creates_placeholder_user_when_none(monkeypatch)", "description": "Tests that a new user is created with OAuth tokens after Confluence OAuth callback when no user exists.", "scope": "", "scopeKind": ""}, {"name": "__aenter__(self)", "scope": "DummyAsyncClient", "scopeKind": "class", "description": "unavailable"}, {"name": "__aexit__(self, exc_type, exc, tb)", "scope": "DummyAsyncClient", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__(self, *args, **kwargs)", "scope": "DummyAsyncClient", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__(self, payload: dict[str, Any], status_code: int = 200)", "scope": "DummyResp", "scopeKind": "class", "description": "unavailable"}, {"name": "json(self)", "scope": "DummyResp", "scopeKind": "class", "description": "unavailable"}, {"name": "post(self, url, json=None, headers=None)", "scope": "DummyAsyncClient", "scopeKind": "class", "description": "unavailable"}], "calls": ["httpx.AsyncClient", "app (from src.api.main)", "SessionLocal", "User", "TestClient", "monkeypatch", "os.path.exists", "os.remove", "os.environ.get", "os.environ"], "search-terms": ["test_oauth_callbacks", "OAuth", "Jira", "Confluence", "OAuth callback", "test database setup", "mock HTTP responses", "FastAPI TestClient"], "state": 2, "file_id": 16, "knowledge_revision": 106, "git_revision": "", "ctags": [{"_type": "tag", "name": "BASE_DIR", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^BASE_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), \"..\"))$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DummyAsyncClient", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^class DummyAsyncClient:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "DummyResp", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^class DummyResp:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TEST_DB_PATH", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^TEST_DB_PATH = os.path.join(BASE_DIR, \"test_integration.db\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "__aenter__", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^    async def __aenter__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "DummyAsyncClient", "scopeKind": "class"}, {"_type": "tag", "name": "__aexit__", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^    async def __aexit__(self, exc_type, exc, tb):$/", "language": "Python", "kind": "member", "signature": "(self, exc_type, exc, tb)", "scope": "DummyAsyncClient", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^    def __init__(self, *args, **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, *args, **kwargs)", "scope": "DummyAsyncClient", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^    def __init__(self, payload: dict[str, Any], status_code: int = 200):$/", "language": "Python", "kind": "member", "signature": "(self, payload: dict[str, Any], status_code: int = 200)", "scope": "DummyResp", "scopeKind": "class"}, {"_type": "tag", "name": "_clear_users", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^def _clear_users():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_patch_httpx", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^def _patch_httpx(monkeypatch):$/", "language": "Python", "kind": "function", "signature": "(monkeypatch)"}, {"_type": "tag", "name": "json", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^    def json(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "DummyResp", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^    async def post(self, url, json=None, headers=None):$/", "language": "Python", "kind": "member", "signature": "(self, url, json=None, headers=None)", "scope": "DummyAsyncClient", "scopeKind": "class"}, {"_type": "tag", "name": "test_confluence_callback_creates_placeholder_user_when_none", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^def test_confluence_callback_creates_placeholder_user_when_none(monkeypatch):$/", "language": "Python", "kind": "function", "signature": "(monkeypatch)"}, {"_type": "tag", "name": "test_jira_callback_creates_placeholder_user_when_none", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^def test_jira_callback_creates_placeholder_user_when_none(monkeypatch):$/", "language": "Python", "kind": "function", "signature": "(monkeypatch)"}, {"_type": "tag", "name": "test_jira_callback_uses_user_id_from_state", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/tests/test_oauth_callbacks.py", "pattern": "/^def test_jira_callback_uses_user_id_from_state(monkeypatch):$/", "language": "Python", "kind": "function", "signature": "(monkeypatch)"}], "hash": "ca2fbf5227730025348c889d6caf206b", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/tests/test_oauth_callbacks.py", "fields": [{"name": "BASE_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), \"..\"))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_DB_PATH = os.path.join(BASE_DIR, \"test_integration.db\")", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"106": ""}]}