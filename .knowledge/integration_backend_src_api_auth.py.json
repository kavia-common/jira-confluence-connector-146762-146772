{"is_source_file": true, "format": "Python", "description": "This file implements authentication-related API endpoints for a web backend utilizing FastAPI. It includes features such as user login, CSRF token issuance and resolution, token refresh, session validation, seed user creation, and logout. The code handles password hashing with bcrypt, JWT token issuance, CSRF protection, and environment-driven configuration.", "external_files": ["src.api.errors", "src.db.config", "src.db.service", "src.db.models"], "external_methods": ["http_error", "get_db", "get_user_by_email"], "published": ["hash_password", "verify_password", "csrf_resolve", "get_csrf_token", "login", "refresh_token", "session_check", "logout", "seed_test_user"], "classes": [{"name": "LoginRequest", "description": "Request model for user login containing username/email and password."}, {"name": "LoginResponse", "description": "Response model for successful login containing tokens and metadata."}, {"name": "RefreshRequest", "description": "Request model for refreshing an access token."}, {"name": "LogoutRequest", "description": "Placeholder for logout request body (not currently used)."}, {"name": "SeedUserRequest", "description": "Request model for seeding a test user with optional email, password, and display name."}, {"name": "SeedUserResponse", "description": "Response model indicating whether a user was created or updated, with email and ID."}], "methods": [{"name": "str hash_password(plain: str)", "description": "Hashes a plaintext password using bcrypt.", "scope": "", "scopeKind": ""}, {"name": "bool verify_password(plain: str, password_hash: str)", "description": "Verifies a plaintext password against a bcrypt hash.", "scope": "", "scopeKind": ""}, {"name": "Tuple[Dict[str,Any],Dict[str,Any]] _issue_token_pair(subject: str, extra_claims: Optional[Dict[str, Any]] = None)", "description": "Generates a pair of JWT tokens: access and refresh, with appropriate claims and expiration.", "scope": "", "scopeKind": ""}, {"name": "str _sign_csrf(value: str)", "description": "Creates a signed CSRF token with HMAC.", "scope": "", "scopeKind": ""}, {"name": "bool _verify_signed_csrf(signed: str)", "description": "Verifies the signature of a signed CSRF token.", "scope": "", "scopeKind": ""}, {"name": "JSONResponse csrf_resolve(state: str | None = None)", "description": "Resolves a CSRF state reference after OAuth, setting a cookie and returning a token.", "scope": "", "scopeKind": ""}, {"name": "JSONResponse get_csrf_token()", "description": "Generates a CSRF token, sets it as an HttpOnly cookie, and returns it.", "scope": "", "scopeKind": ""}, {"name": "Optional[User] _ensure_demo_user(db: Session)", "description": "Creates a demo user in the database if none exists and DEV_MODE is true.", "scope": "", "scopeKind": ""}, {"name": "JSONResponse login( request: Request, payload: LoginRequest, db: Session = Depends(get_db), x_csrf_token: Optional[str] = Header(default=None, convert_underscores=False, alias=\"X-CSRF-Token\"), )", "description": "Handles user login: validates CSRF, verifies credentials, and issues tokens.", "scope": "", "scopeKind": ""}, {"name": "JSONResponse refresh_token(payload: RefreshRequest)", "description": "Validates a refresh token and issues a new access token.", "scope": "", "scopeKind": ""}, {"name": "JSONResponse session_check(authorization: Optional[str] = Header(default=None))", "description": "Checks if an access token is valid and returns authentication status.", "scope": "", "scopeKind": ""}, {"name": "JSONResponse logout()", "description": "Handles logout, instructing the client to discard tokens.", "scope": "", "scopeKind": ""}, {"name": "JSONResponse seed_test_user(payload: SeedUserRequest | None = None, db: Session = Depends(get_db))", "description": "Creates or updates a test user with specified or default credentials (DEV only).", "scope": "", "scopeKind": ""}], "calls": ["bcrypt.gensalt", "bcrypt.hashpw", "bcrypt.checkpw", "jwt.encode", "jwt.decode", "_verify_signed_csrf", "_sign_csrf", "http_error", "get_user_by_email"], "search-terms": ["auth", "JWT", "CSRF", "token", "FastAPI", "password hashing", "OAuth", "Seed User", "Login", "Refresh", "session", "logout"], "state": 2, "file_id": 44, "knowledge_revision": 398, "git_revision": "7d4641b3ae461010d9e81d1dd36af0b328c81578", "revision_history": [{"365": ""}, {"370": "8bdd86987d6289148d45e8ef53ea535c905d54f0"}, {"381": "8bdd86987d6289148d45e8ef53ea535c905d54f0"}, {"385": "8be0e3e0984b3ae0916582074967a8eb307fc02f"}, {"395": "8be0e3e0984b3ae0916582074967a8eb307fc02f"}, {"396": "8be0e3e0984b3ae0916582074967a8eb307fc02f"}, {"398": "7d4641b3ae461010d9e81d1dd36af0b328c81578"}], "ctags": [{"_type": "tag", "name": "ACCESS_MIN", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^ACCESS_MIN = int(os.getenv(\"ACCESS_TOKEN_EXPIRES_MIN\", \"15\"))$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "CSRF_COOKIE_NAME", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^CSRF_COOKIE_NAME = os.getenv(\"CSRF_COOKIE_NAME\", \"csrftoken\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "CSRF_COOKIE_TTL", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^CSRF_COOKIE_TTL = int(os.getenv(\"CSRF_COOKIE_TTL_SEC\", \"600\"))$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "CSRF_SECRET", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^CSRF_SECRET = os.getenv(\"CSRF_SECRET\") or os.getenv(\"APP_SECRET_KEY\") or os.getenv(\"SECRET_KEY\")/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DEV_MODE", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^DEV_MODE = str(os.getenv(\"DEV_MODE\", \"false\")).lower() in (\"1\", \"true\", \"yes\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "JWT_ALG", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^JWT_ALG = os.getenv(\"ALGORITHM\", \"HS256\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "JWT_SECRET", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^JWT_SECRET = os.getenv(\"SECRET_KEY\") or os.getenv(\"APP_SECRET_KEY\") or \"dev-insecure-secret\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "LoginRequest", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^class LoginRequest(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "LoginResponse", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^class LoginResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "LogoutRequest", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^class LogoutRequest(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "REFRESH_DAYS", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^REFRESH_DAYS = int(os.getenv(\"REFRESH_TOKEN_EXPIRES_DAYS\", \"7\"))$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "RefreshRequest", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^class RefreshRequest(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "SeedUserRequest", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^class SeedUserRequest(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "SeedUserResponse", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^class SeedUserResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "U", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^    from src.db.models import User as U$/", "file": true, "language": "Python", "kind": "unknown", "scope": "_ensure_demo_user", "scopeKind": "function", "nameref": "unknown:User"}, {"_type": "tag", "name": "_ensure_demo_user", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^def _ensure_demo_user(db: Session) -> Optional[User]:$/", "language": "Python", "typeref": "typename:Optional[User]", "kind": "function", "signature": "(db: Session)"}, {"_type": "tag", "name": "_issue_token_pair", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^def _issue_token_pair(subject: str, extra_claims: Optional[Dict[str, Any]] = None) -> Tuple[Dict/", "language": "Python", "typeref": "typename:Tuple[Dict[str,Any],Dict[str,Any]]", "kind": "function", "signature": "(subject: str, extra_claims: Optional[Dict[str, Any]] = None)"}, {"_type": "tag", "name": "_sign_csrf", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^def _sign_csrf(value: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(value: str)"}, {"_type": "tag", "name": "_verify_signed_csrf", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^def _verify_signed_csrf(signed: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(signed: str)"}, {"_type": "tag", "name": "access_token", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^    access_token: str = Field(..., description=\"JWT access token\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "LoginResponse", "scopeKind": "class"}, {"_type": "tag", "name": "created", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^    created: bool = Field(..., description=\"True if user was created; false if updated\")$/", "language": "Python", "typeref": "typename:bool", "kind": "variable", "scope": "SeedUserResponse", "scopeKind": "class"}, {"_type": "tag", "name": "csrf_resolve", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^def csrf_resolve(state: str | None = None) -> JSONResponse:$/", "language": "Python", "typeref": "typename:JSONResponse", "kind": "function", "signature": "(state: str | None = None)"}, {"_type": "tag", "name": "display_name", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^    display_name: Optional[str] = Field(None, description=\"Optional display name\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "SeedUserRequest", "scopeKind": "class"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^    email: Optional[str] = Field(None, description=\"Email address\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "LoginRequest", "scopeKind": "class"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^    email: Optional[str] = Field(None, description=\"Email to seed (unique)\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "SeedUserRequest", "scopeKind": "class"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^    email: str = Field(..., description=\"Seeded user's email\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "SeedUserResponse", "scopeKind": "class"}, {"_type": "tag", "name": "expires_in", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^    expires_in: int = Field(..., description=\"Access token expiry in seconds\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "LoginResponse", "scopeKind": "class"}, {"_type": "tag", "name": "get_csrf_token", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^def get_csrf_token() -> JSONResponse:$/", "language": "Python", "typeref": "typename:JSONResponse", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "hash_password", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^def hash_password(plain: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(plain: str)"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^    id: int = Field(..., description=\"User id\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "SeedUserResponse", "scopeKind": "class"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^def login($/", "language": "Python", "typeref": "typename:JSONResponse", "kind": "function", "signature": "( request: Request, payload: LoginRequest, db: Session = Depends(get_db), x_csrf_token: Optional[str] = Header(default=None, convert_underscores=False, alias=\"X-CSRF-Token\"), )"}, {"_type": "tag", "name": "logout", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^def logout() -> JSONResponse:$/", "language": "Python", "typeref": "typename:JSONResponse", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "password", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^    password: Optional[str] = Field(None, description=\"Plaintext password to hash and store\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "SeedUserRequest", "scopeKind": "class"}, {"_type": "tag", "name": "password", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^    password: str = Field(..., description=\"Plaintext password\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "LoginRequest", "scopeKind": "class"}, {"_type": "tag", "name": "refresh_token", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^    refresh_token: str = Field(..., description=\"JWT refresh token\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "LoginResponse", "scopeKind": "class"}, {"_type": "tag", "name": "refresh_token", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^    refresh_token: str = Field(..., description=\"Refresh token JWT\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "RefreshRequest", "scopeKind": "class"}, {"_type": "tag", "name": "refresh_token", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^def refresh_token(payload: RefreshRequest) -> JSONResponse:$/", "language": "Python", "typeref": "typename:JSONResponse", "kind": "function", "signature": "(payload: RefreshRequest)"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^router = APIRouter(tags=[\"Auth\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "seed_test_user", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^def seed_test_user(payload: SeedUserRequest | None = None, db: Session = Depends(get_db)) -> JSO/", "language": "Python", "typeref": "typename:JSONResponse", "kind": "function", "signature": "(payload: SeedUserRequest | None = None, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "session_check", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^def session_check(authorization: Optional[str] = Header(default=None)) -> JSONResponse:$/", "language": "Python", "typeref": "typename:JSONResponse", "kind": "function", "signature": "(authorization: Optional[str] = Header(default=None))"}, {"_type": "tag", "name": "token_type", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^    token_type: str = Field(default=\"bearer\", description=\"Token type\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "LoginResponse", "scopeKind": "class"}, {"_type": "tag", "name": "username", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^    username: Optional[str] = Field(None, description=\"Username or email\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "LoginRequest", "scopeKind": "class"}, {"_type": "tag", "name": "verify_password", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/auth.py", "pattern": "/^def verify_password(plain: str, password_hash: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(plain: str, password_hash: str)"}], "hash": "fb050ec85a512d57f0f931de2c00871a", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/api/auth.py", "fields": [{"name": "ACCESS_MIN = int(os.getenv(\"ACCESS_TOKEN_EXPIRES_MIN\", \"15\"))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "CSRF_COOKIE_NAME = os.getenv(\"CSRF_COOKIE_NAME\", \"csrftoken\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "CSRF_COOKIE_TTL = int(os.getenv(\"CSRF_COOKIE_TTL_SEC\", \"600\"))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "CSRF_SECRET = os.getenv(\"CSRF_SECRET\") or os.getenv(\"APP_SECRET_KEY\") or os.getenv(\"SECRET_KEY\")/", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DEV_MODE = str(os.getenv(\"DEV_MODE\", \"false\")).lower() in (\"1\", \"true\", \"yes\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "JWT_ALG = os.getenv(\"ALGORITHM\", \"HS256\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "JWT_SECRET = os.getenv(\"SECRET_KEY\") or os.getenv(\"APP_SECRET_KEY\") or \"dev-insecure-secret\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "REFRESH_DAYS = int(os.getenv(\"REFRESH_TOKEN_EXPIRES_DAYS\", \"7\"))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str access_token", "scope": "LoginResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "bool created", "scope": "SeedUserResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] display_name", "scope": "SeedUserRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] email", "scope": "LoginRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "str email", "scope": "SeedUserResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "int expires_in", "scope": "LoginResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "int id", "scope": "SeedUserResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] password", "scope": "SeedUserRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "str password", "scope": "LoginRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "str refresh_token", "scope": "LoginResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "router = APIRouter(tags=[\"Auth\"])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str token_type", "scope": "LoginResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] username", "scope": "LoginRequest", "scopeKind": "class", "description": "unavailable"}]}