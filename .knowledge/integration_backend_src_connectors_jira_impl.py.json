{"is_source_file": true, "format": "Python", "description": "This is a Python source file implementing a Jira connector class that uses OAuth 2.0 for authentication and provides methods for authorization, token management, connection status, search, and resource retrieval.", "external_files": ["src.connectors.base.interface", "src.connectors.base.models", "src.db.token_store", "src.api.oauth_config", "httpx", "fastapi"], "external_methods": ["get_jira_oauth_config", "build_atlassian_authorize_url", "save_tokens", "get_tokens", "get_token_record"], "published": ["JiraConnector"], "classes": [{"name": "JiraConnector", "description": "A connector implementation for Jira using Atlassian OAuth 2.0, with methods for OAuth authorization, token refresh, connection verification, search, and resource management."}], "methods": [{"name": "str _default_scopes(self)", "description": "Returns default OAuth scopes for Jira.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "str oauth_authorize_url( self, tenant_id: str, state: Optional[str] = None, scopes: Optional[str] = None )", "description": "Generates OAuth authorization URL, embedding tenant ID and optional state into the 'state' parameter.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "ConnectionStatus oauth_callback( self, code: str, tenant_id: str, state: Optional[str] = None )", "description": "Handles OAuth callback, exchanges authorization code for tokens, and stores tokens.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "ConnectionStatus connection_status(self, tenant_id: str)", "description": "Checks if the tenant has valid tokens and returns connection status.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "ConnectionStatus refresh_token_if_needed(self, tenant_id: str)", "description": "Refreshes access tokens if they are about to expire.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] _require_connected(self, tenant_id: str)", "description": "Ensures that the tenant is connected, raises an HTTP 401 error if not.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "List[SearchResultItem] search( self, query: str, tenant_id: str, limit: int = 10, filters: Optional[Dict[str, Any]] = None, )", "description": "Performs a search against Jira; currently returns stubbed data with a query match.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "CreateResult create(self, payload: Dict[str, Any], tenant_id: str)", "description": "Creates a Jira issue; currently returns a stubbed response.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] get_resource(self, key: str, tenant_id: str)", "description": "Retrieves a resource (issue) by key, returning stub data.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "\"JiraConnector\" with_db(self, db)", "description": "Assigns a database session to the connector instance for dependency injection.", "scope": "JiraConnector", "scopeKind": "class"}], "calls": ["build_atlassian_authorize_url", "save_tokens", "get_tokens", "get_token_record", "httpx.Client", "time.time"], "search-terms": ["JiraConnector", "OAuth", "oauth_callback", "refresh_token", "connection_status", "create", "search"], "state": 2, "file_id": 24, "knowledge_revision": 142, "git_revision": "", "ctags": [{"_type": "tag", "name": "JiraConnector", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^class JiraConnector(BaseConnector):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_default_scopes", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def _default_scopes(self) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "_require_connected", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def _require_connected(self, tenant_id: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, tenant_id: str)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "connection_status", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def connection_status(self, tenant_id: str) -> ConnectionStatus:$/", "language": "Python", "typeref": "typename:ConnectionStatus", "kind": "member", "signature": "(self, tenant_id: str)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "connector_id", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    connector_id: str = \"jira\"$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def create(self, payload: Dict[str, Any], tenant_id: str) -> CreateResult:$/", "language": "Python", "typeref": "typename:CreateResult", "kind": "member", "signature": "(self, payload: Dict[str, Any], tenant_id: str)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "get_resource", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def get_resource(self, key: str, tenant_id: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, key: str, tenant_id: str)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "oauth_authorize_url", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def oauth_authorize_url($/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "( self, tenant_id: str, state: Optional[str] = None, scopes: Optional[str] = None )", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "oauth_callback", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def oauth_callback($/", "language": "Python", "typeref": "typename:ConnectionStatus", "kind": "member", "signature": "( self, code: str, tenant_id: str, state: Optional[str] = None )", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "refresh_token_if_needed", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def refresh_token_if_needed(self, tenant_id: str) -> ConnectionStatus:$/", "language": "Python", "typeref": "typename:ConnectionStatus", "kind": "member", "signature": "(self, tenant_id: str)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "search", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def search($/", "language": "Python", "typeref": "typename:List[SearchResultItem]", "kind": "member", "signature": "( self, query: str, tenant_id: str, limit: int = 10, filters: Optional[Dict[str, Any]] = None, )", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "with_db", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def with_db(self, db) -> \"JiraConnector\":$/", "language": "Python", "typeref": "typename:\"JiraConnector\"", "kind": "member", "signature": "(self, db)", "scope": "JiraConnector", "scopeKind": "class"}], "hash": "35642ae75a3a2ed65fac99d8f4dbb238", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/connectors/jira/impl.py", "fields": [{"name": "str connector_id", "scope": "JiraConnector", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"142": ""}]}