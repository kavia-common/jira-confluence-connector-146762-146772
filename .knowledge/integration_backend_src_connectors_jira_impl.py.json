{"is_source_file": true, "format": "Python", "description": "This is a Python source file implementing a Jira connector class using OAuth 2.0 authentication. It provides methods to perform OAuth authorization and token handling, connection status checks, and stubbed placeholders for search and create operations within a Jira integration context.", "external_files": ["src.connectors.base.interface", "src.connectors.base.models", "src.db.token_store", "src.api.oauth_config"], "external_methods": ["get_jira_oauth_config()", "build_atlassian_authorize_url()", "save_tokens()", "get_tokens()", "get_token_record()"], "published": ["JiraConnector"], "classes": [{"name": "JiraConnector", "description": "A class that implements a Jira connector, handling OAuth 2.0 authentication, token management, and stubbed Jira operations."}], "methods": [{"name": "str _default_scopes(self)", "description": "Returns the default OAuth scopes required for Jira access.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "str oauth_authorize_url( self, tenant_id: str, state: Optional[str] = None, scopes: Optional[str] = None )", "description": "Generates the OAuth authorization URL for user login and consent.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "ConnectionStatus oauth_callback( self, code: str, tenant_id: str, state: Optional[str] = None )", "description": "Handles OAuth callback, exchanges code for tokens, and saves token data.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "ConnectionStatus connection_status(self, tenant_id: str)", "description": "Checks and returns the current connection status and token expiry information.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "ConnectionStatus refresh_token_if_needed(self, tenant_id: str)", "description": "Refreshes the OAuth access token if it has expired or is close to expiry.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] _require_connected(self, tenant_id: str)", "description": "Ensures the connector is connected with valid tokens; throws HTTP 401 if not.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "List[SearchResultItem] search( self, query: str, tenant_id: str, limit: int = 10, filters: Optional[Dict[str, Any]] = None, )", "description": "Stub method returning dummy search results for Jira issues.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "CreateResult create(self, payload: Dict[str, Any], tenant_id: str)", "description": "Stub method simulating the creation of a Jira issue.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] get_resource(self, key: str, tenant_id: str)", "description": "Returns a stub resource representation based on a key.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "\"JiraConnector\" with_db(self, db)", "description": "Sets the database session for the connector instance (dependency injection).", "scope": "JiraConnector", "scopeKind": "class"}], "calls": ["get_jira_oauth_config()", "build_atlassian_authorize_url()", "save_tokens()", "get_tokens()", "get_token_record()", "httpx.Client()"], "search-terms": ["Jira OAuth2 implementation", "Jira token exchange", "Jira connection status", "Jira OAuth token refresh", "Jira stub search", "Jira stub create"], "state": 2, "file_id": 24, "knowledge_revision": 195, "git_revision": "12d8ad06d6d25895e7b7f7731fae87c198f837c8", "revision_history": [{"142": ""}, {"195": "12d8ad06d6d25895e7b7f7731fae87c198f837c8"}], "ctags": [{"_type": "tag", "name": "JiraConnector", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^class JiraConnector(BaseConnector):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_default_scopes", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def _default_scopes(self) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "_require_connected", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def _require_connected(self, tenant_id: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, tenant_id: str)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "connection_status", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def connection_status(self, tenant_id: str) -> ConnectionStatus:$/", "language": "Python", "typeref": "typename:ConnectionStatus", "kind": "member", "signature": "(self, tenant_id: str)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "connector_id", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    connector_id: str = \"jira\"$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def create(self, payload: Dict[str, Any], tenant_id: str) -> CreateResult:$/", "language": "Python", "typeref": "typename:CreateResult", "kind": "member", "signature": "(self, payload: Dict[str, Any], tenant_id: str)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "get_resource", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def get_resource(self, key: str, tenant_id: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, key: str, tenant_id: str)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "oauth_authorize_url", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def oauth_authorize_url($/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "( self, tenant_id: str, state: Optional[str] = None, scopes: Optional[str] = None )", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "oauth_callback", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def oauth_callback($/", "language": "Python", "typeref": "typename:ConnectionStatus", "kind": "member", "signature": "( self, code: str, tenant_id: str, state: Optional[str] = None )", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "refresh_token_if_needed", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def refresh_token_if_needed(self, tenant_id: str) -> ConnectionStatus:$/", "language": "Python", "typeref": "typename:ConnectionStatus", "kind": "member", "signature": "(self, tenant_id: str)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "search", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def search($/", "language": "Python", "typeref": "typename:List[SearchResultItem]", "kind": "member", "signature": "( self, query: str, tenant_id: str, limit: int = 10, filters: Optional[Dict[str, Any]] = None, )", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "with_db", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def with_db(self, db) -> \"JiraConnector\":$/", "language": "Python", "typeref": "typename:\"JiraConnector\"", "kind": "member", "signature": "(self, db)", "scope": "JiraConnector", "scopeKind": "class"}], "hash": "d2e6542ca39d188d8b87835a3f37949d", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/connectors/jira/impl.py", "fields": [{"name": "str connector_id", "scope": "JiraConnector", "scopeKind": "class", "description": "unavailable"}]}