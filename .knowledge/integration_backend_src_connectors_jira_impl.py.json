{"is_source_file": true, "format": "Python", "description": "This file implements a Jira connector class in Python that manages OAuth2 authentication, token management, connection status, and basic Jira operations such as search and create. It belongs to a larger codebase integrating Jira with OAuth authentication and token storage.", "external_files": ["src.connectors.base.interface", "src.connectors.base.models", "src.db.token_store", "src.api.oauth_config"], "external_methods": ["get_jira_oauth_config", "build_atlassian_authorize_url", "save_tokens", "get_tokens", "get_token_record"], "published": ["JiraConnector"], "classes": [{"name": "JiraConnector", "description": "Implements a Jira connector using Atlassian OAuth 2.0 protocol, managing authorization, token exchange, refresh, and basic Jira operations."}], "methods": [{"name": "str _default_scopes(self)", "description": "Returns the default OAuth scopes required for Jira integration.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "str oauth_authorize_url( self, tenant_id: str, state: Optional[str] = None, scopes: Optional[str] = None )", "description": "Generates the OAuth authorization URL with tenant info and state handling.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "ConnectionStatus oauth_callback( self, code: str, tenant_id: str, state: Optional[str] = None )", "description": "Handles OAuth callback, exchanges code for tokens, fetches accessible resources, and persists tokens and metadata.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "ConnectionStatus connection_status(self, tenant_id: str)", "description": "Returns the connection status for a given tenant, including scope and expiration info.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "ConnectionStatus refresh_token_if_needed(self, tenant_id: str)", "description": "Refreshes OAuth tokens if the current access token is close to expiration.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] _require_connected(self, tenant_id: str)", "description": "Checks if the connector is connected for a tenant, raising an exception if not.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "List[SearchResultItem] search( self, query: str, tenant_id: str, limit: int = 10, filters: Optional[Dict[str, Any]] = None, )", "description": "Performs a search query; currently returns stubbed demo results.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "CreateResult create(self, payload: Dict[str, Any], tenant_id: str)", "description": "Creates a Jira issue; currently returns a stubbed result.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] get_resource(self, key: str, tenant_id: str)", "description": "Returns stubbed resource data for a given key.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "\"JiraConnector\" with_db(self, db)", "description": "Injects a database session into the connector instance.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "Optional[Dict[str,str]] _parse_state_for_selection(s: Optional[str])", "scope": "JiraConnector.oauth_callback", "scopeKind": "member", "description": "unavailable"}], "calls": ["get_jira_oauth_config", "build_atlassian_authorize_url", "save_tokens", "get_tokens", "get_token_record", "httpx.Client", "json.loads", "json.dumps", "time.time", "status.HTTP_400_BAD_REQUEST", "status.HTTP_502_BAD_GATEWAY", "parse_qs", "raise HTTPException"], "search-terms": ["Jira OAuth implementation", "token exchange Jira", "OAuth token refresh Jira", "Jira resource management", "Jira connector class", "Jira OAuth URL", "OAuth callback Jira"], "state": 2, "file_id": 24, "knowledge_revision": 274, "git_revision": "c8c8b2346ed5bbe397042b12858b2a48ca9253ce", "revision_history": [{"142": ""}, {"195": "12d8ad06d6d25895e7b7f7731fae87c198f837c8"}, {"237": "12d8ad06d6d25895e7b7f7731fae87c198f837c8"}, {"274": "c8c8b2346ed5bbe397042b12858b2a48ca9253ce"}], "ctags": [{"_type": "tag", "name": "JiraConnector", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^class JiraConnector(BaseConnector):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_default_scopes", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def _default_scopes(self) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "_parse_state_for_selection", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^            def _parse_state_for_selection(s: Optional[str]) -> Optional[Dict[str, str]]:$/", "file": true, "language": "Python", "typeref": "typename:Optional[Dict[str,str]]", "kind": "function", "signature": "(s: Optional[str])", "scope": "JiraConnector.oauth_callback", "scopeKind": "member"}, {"_type": "tag", "name": "_require_connected", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def _require_connected(self, tenant_id: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, tenant_id: str)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "connection_status", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def connection_status(self, tenant_id: str) -> ConnectionStatus:$/", "language": "Python", "typeref": "typename:ConnectionStatus", "kind": "member", "signature": "(self, tenant_id: str)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "connector_id", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    connector_id: str = \"jira\"$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def create(self, payload: Dict[str, Any], tenant_id: str) -> CreateResult:$/", "language": "Python", "typeref": "typename:CreateResult", "kind": "member", "signature": "(self, payload: Dict[str, Any], tenant_id: str)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "get_resource", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def get_resource(self, key: str, tenant_id: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, key: str, tenant_id: str)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "oauth_authorize_url", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def oauth_authorize_url($/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "( self, tenant_id: str, state: Optional[str] = None, scopes: Optional[str] = None )", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "oauth_callback", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def oauth_callback($/", "language": "Python", "typeref": "typename:ConnectionStatus", "kind": "member", "signature": "( self, code: str, tenant_id: str, state: Optional[str] = None )", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "refresh_token_if_needed", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def refresh_token_if_needed(self, tenant_id: str) -> ConnectionStatus:$/", "language": "Python", "typeref": "typename:ConnectionStatus", "kind": "member", "signature": "(self, tenant_id: str)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "search", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def search($/", "language": "Python", "typeref": "typename:List[SearchResultItem]", "kind": "member", "signature": "( self, query: str, tenant_id: str, limit: int = 10, filters: Optional[Dict[str, Any]] = None, )", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "with_db", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/impl.py", "pattern": "/^    def with_db(self, db) -> \"JiraConnector\":$/", "language": "Python", "typeref": "typename:\"JiraConnector\"", "kind": "member", "signature": "(self, db)", "scope": "JiraConnector", "scopeKind": "class"}], "hash": "35064829e6f67f6293b5db1cae2afa53", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/connectors/jira/impl.py", "fields": [{"name": "str connector_id", "scope": "JiraConnector", "scopeKind": "class", "description": "unavailable"}]}