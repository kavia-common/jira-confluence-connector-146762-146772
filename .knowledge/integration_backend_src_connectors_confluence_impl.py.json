{"is_source_file": true, "format": "Python", "description": "This file implements a Confluence connector utilizing Atlassian OAuth 2.0 for authentication, providing methods for OAuth authorization, token management, connection status, search, create, and resource retrieval.", "external_files": ["src.connectors.base.base_connector", "src.connectors.base.models", "src.db.token_store", "src.api.oauth_config", "httpx"], "external_methods": ["build_atlassian_authorize_url", "get_confluence_oauth_config", "save_tokens", "get_tokens", "get_token_record"], "published": ["ConfluenceConnector"], "classes": [{"name": "ConfluenceConnector", "description": "Implementation of a connector for Confluence using OAuth 2.0, providing OAuth flows, token refresh, search, and resource management."}], "methods": [{"name": "str _default_scopes(self)", "description": "Returns default OAuth scopes required for Confluence access.", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"name": "str oauth_authorize_url( self, tenant_id: str, state: Optional[str] = None, scopes: Optional[str] = None )", "description": "Generates the OAuth authorization URL with tenant ID and optional state and scopes.", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"name": "ConnectionStatus oauth_callback( self, code: str, tenant_id: str, state: Optional[str] = None )", "description": "Handles OAuth callback, exchanges code for tokens, and saves tokens.", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"name": "ConnectionStatus connection_status(self, tenant_id: str)", "description": "Retrieves the current connection status for a tenant, including scope and expiry.", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"name": "ConnectionStatus refresh_token_if_needed(self, tenant_id: str)", "description": "Refreshes the access token if it's close to expiry, using the refresh token.", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"name": "List[SearchResultItem] search( self, query: str, tenant_id: str, limit: int = 10, filters: Optional[Dict[str, Any]] = None )", "description": "Performs a stubbed search on Confluence pages matching a query.", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"name": "CreateResult create(self, payload: Dict[str, Any], tenant_id: str)", "description": "Creates a new page or resource, returns a stubbed result.", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] get_resource(self, key: str, tenant_id: str)", "description": "Retrieves resource details based on a key.", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"name": "\"ConfluenceConnector\" with_db(self, db)", "description": "Assigns the database connection to the connector instance and returns self.", "scope": "ConfluenceConnector", "scopeKind": "class"}], "calls": ["build_atlassian_authorize_url", "get_confluence_oauth_config", "save_tokens", "get_tokens", "get_token_record", "httpx.Client", "status.HTTP_400_BAD_REQUEST", "status.HTTP_401_UNAUTHORIZED", "status.HTTP_502_BAD_GATEWAY", "time.time"], "search-terms": ["ConfluenceOAuth", "OAuth2", "token management", "search implementation", "API connector", "Atlassian", "confluence"], "state": 2, "file_id": 26, "knowledge_revision": 337, "git_revision": "050999a09b790ceb7c6b7f96d5411b60fcdc74b2", "revision_history": [{"146": ""}, {"337": "050999a09b790ceb7c6b7f96d5411b60fcdc74b2"}], "ctags": [{"_type": "tag", "name": "ConfluenceConnector", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/confluence/impl.py", "pattern": "/^class ConfluenceConnector(BaseConnector):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_default_scopes", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/confluence/impl.py", "pattern": "/^    def _default_scopes(self) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self)", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"_type": "tag", "name": "connection_status", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/confluence/impl.py", "pattern": "/^    def connection_status(self, tenant_id: str) -> ConnectionStatus:$/", "language": "Python", "typeref": "typename:ConnectionStatus", "kind": "member", "signature": "(self, tenant_id: str)", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"_type": "tag", "name": "connector_id", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/confluence/impl.py", "pattern": "/^    connector_id: str = \"confluence\"$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/confluence/impl.py", "pattern": "/^    def create(self, payload: Dict[str, Any], tenant_id: str) -> CreateResult:$/", "language": "Python", "typeref": "typename:CreateResult", "kind": "member", "signature": "(self, payload: Dict[str, Any], tenant_id: str)", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"_type": "tag", "name": "get_resource", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/confluence/impl.py", "pattern": "/^    def get_resource(self, key: str, tenant_id: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, key: str, tenant_id: str)", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"_type": "tag", "name": "oauth_authorize_url", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/confluence/impl.py", "pattern": "/^    def oauth_authorize_url($/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "( self, tenant_id: str, state: Optional[str] = None, scopes: Optional[str] = None )", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"_type": "tag", "name": "oauth_callback", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/confluence/impl.py", "pattern": "/^    def oauth_callback($/", "language": "Python", "typeref": "typename:ConnectionStatus", "kind": "member", "signature": "( self, code: str, tenant_id: str, state: Optional[str] = None )", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"_type": "tag", "name": "refresh_token_if_needed", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/confluence/impl.py", "pattern": "/^    def refresh_token_if_needed(self, tenant_id: str) -> ConnectionStatus:$/", "language": "Python", "typeref": "typename:ConnectionStatus", "kind": "member", "signature": "(self, tenant_id: str)", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"_type": "tag", "name": "search", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/confluence/impl.py", "pattern": "/^    def search($/", "language": "Python", "typeref": "typename:List[SearchResultItem]", "kind": "member", "signature": "( self, query: str, tenant_id: str, limit: int = 10, filters: Optional[Dict[str, Any]] = None )", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"_type": "tag", "name": "with_db", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/confluence/impl.py", "pattern": "/^    def with_db(self, db) -> \"ConfluenceConnector\":$/", "language": "Python", "typeref": "typename:\"ConfluenceConnector\"", "kind": "member", "signature": "(self, db)", "scope": "ConfluenceConnector", "scopeKind": "class"}], "hash": "bbabdbfa6efa79c2f5c49049c1d784c6", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/connectors/confluence/impl.py", "fields": [{"name": "str connector_id", "scope": "ConfluenceConnector", "scopeKind": "class", "description": "unavailable"}]}