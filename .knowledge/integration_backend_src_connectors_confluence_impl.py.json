{"is_source_file": true, "format": "Python", "description": "Implementation of a Confluence connector using Atlassian OAuth 2.0, handling OAuth flows, token refresh, search, and resource retrieval.", "external_files": ["src/connectors/base/base_connector.py", "src/connectors/base/models.py", "src/db/token_store.py", "src.api.oauth_config.py", "httpx"], "external_methods": ["build_atlassian_authorize_url", "save_tokens", "get_tokens", "get_token_record"], "published": ["ConfluenceConnector"], "classes": [{"name": "ConfluenceConnector", "description": "A connector class for integrating with Confluence via Atlassian OAuth 2.0."}], "methods": [{"name": "str _default_scopes(self)", "description": "Returns the default OAuth scopes for Confluence access.", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"name": "str oauth_authorize_url( self, tenant_id: str, state: Optional[str] = None, scopes: Optional[str] = None )", "description": "Builds the OAuth authorization URL for user login.", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"name": "ConnectionStatus oauth_callback( self, code: str, tenant_id: str, state: Optional[str] = None )", "description": "Handles OAuth callback, exchanges code for tokens, and saves tokens.", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"name": "ConnectionStatus connection_status(self, tenant_id: str)", "description": "Checks and returns the current connection status for a tenant.", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"name": "ConnectionStatus refresh_token_if_needed(self, tenant_id: str)", "description": "Refreshes the access token if it is close to expiry.", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"name": "List[SearchResultItem] search( self, query: str, tenant_id: str, limit: int = 10, filters: Optional[Dict[str, Any]] = None )", "description": "Performs a search query on Confluence pages, returns stubbed search results.", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"name": "CreateResult create(self, payload: Dict[str, Any], tenant_id: str)", "description": "Creates a new Confluence page (stub implementation).", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] get_resource(self, key: str, tenant_id: str)", "description": "Retrieves metadata for a specific Confluence resource by key.", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"name": "\"ConfluenceConnector\" with_db(self, db)", "description": "Assigns a database handle to the connector for persistence operations.", "scope": "ConfluenceConnector", "scopeKind": "class"}], "calls": ["build_atlassian_authorize_url", "save_tokens", "get_tokens", "get_token_record", "httpx.Client", "resp.json()", "get_confluence_oauth_config"], "search-terms": ["ConfluenceOAuth", "oauth_callback", "refresh_token", "search", "create_page", "resource_metadata"], "state": 2, "file_id": 26, "knowledge_revision": 341, "git_revision": "a66d8e0c27284d04b8803b4d6f46d3b1e2da6df1", "revision_history": [{"146": ""}, {"337": "050999a09b790ceb7c6b7f96d5411b60fcdc74b2"}, {"341": "a66d8e0c27284d04b8803b4d6f46d3b1e2da6df1"}], "ctags": [{"_type": "tag", "name": "ConfluenceConnector", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/confluence/impl.py", "pattern": "/^class ConfluenceConnector(BaseConnector):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_default_scopes", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/confluence/impl.py", "pattern": "/^    def _default_scopes(self) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self)", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"_type": "tag", "name": "connection_status", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/confluence/impl.py", "pattern": "/^    def connection_status(self, tenant_id: str) -> ConnectionStatus:$/", "language": "Python", "typeref": "typename:ConnectionStatus", "kind": "member", "signature": "(self, tenant_id: str)", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"_type": "tag", "name": "connector_id", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/confluence/impl.py", "pattern": "/^    connector_id: str = \"confluence\"$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/confluence/impl.py", "pattern": "/^    def create(self, payload: Dict[str, Any], tenant_id: str) -> CreateResult:$/", "language": "Python", "typeref": "typename:CreateResult", "kind": "member", "signature": "(self, payload: Dict[str, Any], tenant_id: str)", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"_type": "tag", "name": "get_resource", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/confluence/impl.py", "pattern": "/^    def get_resource(self, key: str, tenant_id: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, key: str, tenant_id: str)", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"_type": "tag", "name": "get_tokens", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/confluence/impl.py", "pattern": "/^from src.db.token_store import save_tokens_db_aware as save_tokens, get_tokens_db_aware as get_t/", "language": "Python", "kind": "unknown", "nameref": "unknown:get_tokens_db_aware"}, {"_type": "tag", "name": "oauth_authorize_url", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/confluence/impl.py", "pattern": "/^    def oauth_authorize_url($/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "( self, tenant_id: str, state: Optional[str] = None, scopes: Optional[str] = None )", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"_type": "tag", "name": "oauth_callback", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/confluence/impl.py", "pattern": "/^    def oauth_callback($/", "language": "Python", "typeref": "typename:ConnectionStatus", "kind": "member", "signature": "( self, code: str, tenant_id: str, state: Optional[str] = None )", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"_type": "tag", "name": "refresh_token_if_needed", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/confluence/impl.py", "pattern": "/^    def refresh_token_if_needed(self, tenant_id: str) -> ConnectionStatus:$/", "language": "Python", "typeref": "typename:ConnectionStatus", "kind": "member", "signature": "(self, tenant_id: str)", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"_type": "tag", "name": "save_tokens", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/confluence/impl.py", "pattern": "/^from src.db.token_store import save_tokens_db_aware as save_tokens, get_tokens_db_aware as get_t/", "language": "Python", "kind": "unknown", "nameref": "unknown:save_tokens_db_aware"}, {"_type": "tag", "name": "search", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/confluence/impl.py", "pattern": "/^    def search($/", "language": "Python", "typeref": "typename:List[SearchResultItem]", "kind": "member", "signature": "( self, query: str, tenant_id: str, limit: int = 10, filters: Optional[Dict[str, Any]] = None )", "scope": "ConfluenceConnector", "scopeKind": "class"}, {"_type": "tag", "name": "with_db", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/confluence/impl.py", "pattern": "/^    def with_db(self, db) -> \"ConfluenceConnector\":$/", "language": "Python", "typeref": "typename:\"ConfluenceConnector\"", "kind": "member", "signature": "(self, db)", "scope": "ConfluenceConnector", "scopeKind": "class"}], "hash": "94618794a14ea9d175e2a8f42c09de98", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/connectors/confluence/impl.py", "fields": [{"name": "str connector_id", "scope": "ConfluenceConnector", "scopeKind": "class", "description": "unavailable"}]}