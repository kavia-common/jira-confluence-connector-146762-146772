{"is_source_file": true, "format": "Python", "description": "This file provides functions to handle storage, retrieval, encryption, decryption, and deletion of connector tokens in a database, specifically for a Jira-Confluence integration backend. It manages token persistence with encryption, performs database queries, and exposes a clear interface for token management.", "external_files": ["src.connectors.base.security", ".models"], "external_methods": ["encrypt_json", "decrypt_json"], "published": ["save_tokens", "get_tokens", "get_token_record", "delete_tokens"], "classes": [{"name": "ConnectorToken", "description": "ORM model representing stored connector tokens, including fields like connector_id, tenant_id, token_payload, encrypted flag, scopes, expiry, and metadata."}], "methods": [{"name": "ConnectorToken save_tokens( db: Session, connector_id: str, tenant_id: str, tokens: Dict[str, Any], scopes: Optional[str] = None, expires_at: Optional[int] = None, metadata: Optional[Dict[str, Any]] = None, )", "description": "Encrypts tokens and stores them in the database, performing an upsert based on connector_id and tenant_id.", "scope": "", "scopeKind": ""}, {"name": "Optional[Dict[str,Any]] get_tokens( db: Session, connector_id: str, tenant_id: str )", "description": "Retrieves and decrypts tokens for a specific connector tenant, returning None if not found or if decryption fails.", "scope": "", "scopeKind": ""}, {"name": "Optional[ConnectorToken] get_token_record( db: Session, connector_id: str, tenant_id: str )", "description": "Fetches the raw database record for tokens without decrypting, providing metadata and expiry information.", "scope": "", "scopeKind": ""}, {"name": "int delete_tokens(db: Session, connector_id: str, tenant_id: str)", "description": "Deletes stored tokens for a specific connector tenant and returns the number of rows deleted.", "scope": "", "scopeKind": ""}], "calls": ["select", "db.execute", "db.commit", "db.refresh", "json.dumps", "encrypt_json", "decrypt_json"], "search-terms": ["token storage", "ConnectorToken ORM", "encrypt_json", "decrypt_json", "token persistence", "token retrieval", "token deletion", "tenant_id", "connector_id"], "state": 2, "file_id": 23, "knowledge_revision": 166, "git_revision": "b4173be147978e9b274a64e19f6a629e069e2c64", "revision_history": [{"140": ""}, {"163": "050999a09b790ceb7c6b7f96d5411b60fcdc74b2"}, {"166": "b4173be147978e9b274a64e19f6a629e069e2c64"}], "ctags": [{"_type": "tag", "name": "delete_tokens", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/token_store.py", "pattern": "/^def delete_tokens(db: Session, connector_id: str, tenant_id: str) -> int:$/", "language": "Python", "typeref": "typename:int", "kind": "function", "signature": "(db: Session, connector_id: str, tenant_id: str)"}, {"_type": "tag", "name": "get_token_record", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/token_store.py", "pattern": "/^def get_token_record($/", "language": "Python", "typeref": "typename:Optional[ConnectorToken]", "kind": "function", "signature": "( db: Session, connector_id: str, tenant_id: str )"}, {"_type": "tag", "name": "get_tokens", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/token_store.py", "pattern": "/^def get_tokens($/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "function", "signature": "( db: Session, connector_id: str, tenant_id: str )"}, {"_type": "tag", "name": "save_tokens", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/token_store.py", "pattern": "/^def save_tokens($/", "language": "Python", "typeref": "typename:ConnectorToken", "kind": "function", "signature": "( db: Session, connector_id: str, tenant_id: str, tokens: Dict[str, Any], scopes: Optional[str] = None, expires_at: Optional[int] = None, metadata: Optional[Dict[str, Any]] = None, )"}], "hash": "16cdeacbde544b61b93a05e1b0a4f434", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/db/token_store.py"}