{"is_source_file": true, "format": "Python", "description": "A simple in-memory token store for managing access tokens, refresh tokens, and metadata for connectors and tenants, including functions to save, update, retrieve, delete, and list connection tokens.", "external_files": [], "external_methods": ["time.time"], "published": ["save_tokens", "update_meta", "get_tokens", "delete_tokens", "list_connections"], "classes": [], "methods": [{"name": "None save_tokens( connector: str, tenant_id: str, access_token: str, refresh_token: Optional[str] = None, expires_at: Optional[int] = None, scopes: Optional[List[str]] = None, base_url: Optional[str] = None, cloud_id: Optional[str] = None, last_error: Optional[str] = None, )", "description": "Saves or updates token information (access token, refresh token, expiry, scopes, etc.) for a given connector and tenant.", "scope": "", "scopeKind": ""}, {"name": "None update_meta( connector: str, tenant_id: str, *, refreshed_at: Optional[int] = None, expires_at: Optional[int] = None, scopes: Optional[List[str]] = None, base_url: Optional[str] = None, cloud_id: Optional[str] = None, last_error: Optional[str] = None, )", "description": "Updates metadata fields for existing stored connection data, such as refresh time, expiry, scopes, etc.", "scope": "", "scopeKind": ""}, {"name": "Optional[Dict[str,Any]] get_tokens(connector: str, tenant_id: str)", "description": "Retrieves token data for a specific connector and tenant if available.", "scope": "", "scopeKind": ""}, {"name": "None delete_tokens(connector: str, tenant_id: str)", "description": "Removes stored tokens for a specific connector and tenant.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Dict[str,Any]] list_connections(connector: Optional[str] = None)", "description": "Returns all stored connections or only those for a specified connector.", "scope": "", "scopeKind": ""}, {"name": "str _key(connector: str, tenant_id: str)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["time()"], "search-terms": ["in-memory token store", "save_tokens", "update_meta", "get_tokens", "delete_tokens", "list_connections", "connector", "tenant_id", "refresh_token", "expires_at", "scopes", "cloud_id"], "state": 2, "file_id": 23, "knowledge_revision": 328, "git_revision": "b4173be147978e9b274a64e19f6a629e069e2c64", "revision_history": [{"140": ""}, {"163": "050999a09b790ceb7c6b7f96d5411b60fcdc74b2"}, {"166": "b4173be147978e9b274a64e19f6a629e069e2c64"}, {"328": "b4173be147978e9b274a64e19f6a629e069e2c64"}], "ctags": [{"_type": "tag", "name": "_STORE", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/token_store.py", "pattern": "/^_STORE: Dict[str, Dict[str, Any]] = {}$/", "language": "Python", "typeref": "typename:Dict[str, Dict[str, Any]]", "kind": "variable"}, {"_type": "tag", "name": "_key", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/token_store.py", "pattern": "/^def _key(connector: str, tenant_id: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(connector: str, tenant_id: str)"}, {"_type": "tag", "name": "delete_tokens", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/token_store.py", "pattern": "/^def delete_tokens(connector: str, tenant_id: str) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(connector: str, tenant_id: str)"}, {"_type": "tag", "name": "get_tokens", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/token_store.py", "pattern": "/^def get_tokens(connector: str, tenant_id: str) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "function", "signature": "(connector: str, tenant_id: str)"}, {"_type": "tag", "name": "list_connections", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/token_store.py", "pattern": "/^def list_connections(connector: Optional[str] = None) -> Dict[str, Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Dict[str,Dict[str,Any]]", "kind": "function", "signature": "(connector: Optional[str] = None)"}, {"_type": "tag", "name": "save_tokens", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/token_store.py", "pattern": "/^def save_tokens($/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "( connector: str, tenant_id: str, access_token: str, refresh_token: Optional[str] = None, expires_at: Optional[int] = None, scopes: Optional[List[str]] = None, base_url: Optional[str] = None, cloud_id: Optional[str] = None, last_error: Optional[str] = None, )"}, {"_type": "tag", "name": "update_meta", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/token_store.py", "pattern": "/^def update_meta($/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "( connector: str, tenant_id: str, *, refreshed_at: Optional[int] = None, expires_at: Optional[int] = None, scopes: Optional[List[str]] = None, base_url: Optional[str] = None, cloud_id: Optional[str] = None, last_error: Optional[str] = None, )"}], "hash": "5875192f47816d9a695b4055afce1cad", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/db/token_store.py", "fields": [{"name": "Dict[str, Dict[str, Any]] _STORE", "scope": "", "scopeKind": "", "description": "unavailable"}]}