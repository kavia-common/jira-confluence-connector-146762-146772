{"is_source_file": true, "format": "Python", "description": "This file implements a thread-safe in-memory token store class named TokenStore. It provides methods to get, save, and delete tokens keyed by tenant ID and provider, utilizing a global dictionary and threading lock for concurrency.", "external_files": [], "external_methods": ["threading.Lock", "time.time"], "published": ["TokenStore"], "classes": [{"name": "TokenStore", "description": "A simple thread-safe token storage class that allows storing, retrieving, and deleting tokens based on tenant and provider identifiers."}], "methods": [{"name": "Optional[Dict[str,Any]] get_token(self, tenant_id: str, provider: str)", "description": "Retrieves a token record for the specified tenant ID and provider, or None if not found.", "scope": "TokenStore", "scopeKind": "class"}, {"name": "None save_token(self, tenant_id: str, provider: str, record: Dict[str, Any])", "description": "Stores a token record for the specified tenant ID and provider, adding a timestamp of last refresh.", "scope": "TokenStore", "scopeKind": "class"}, {"name": "None delete_token(self, tenant_id: str, provider: str)", "description": "Deletes the token record for the specified tenant ID and provider, if it exists.", "scope": "TokenStore", "scopeKind": "class"}], "calls": ["with _LOCK", "_STORE.get", "_STORE.setdefault", "dict(record)", "time.time()", "del _STORE[tenant_id][provider]"], "search-terms": ["TokenStore", "thread-safe token storage", "in-memory token store", "token management", "tenant_id", "provider"], "state": 2, "file_id": 23, "knowledge_revision": 348, "git_revision": "a66d8e0c27284d04b8803b4d6f46d3b1e2da6df1", "revision_history": [{"140": ""}, {"163": "050999a09b790ceb7c6b7f96d5411b60fcdc74b2"}, {"166": "b4173be147978e9b274a64e19f6a629e069e2c64"}, {"328": "b4173be147978e9b274a64e19f6a629e069e2c64"}, {"338": "98c6b59c7482973cee0153f948eb6d1b34db4a07"}, {"339": "98c6b59c7482973cee0153f948eb6d1b34db4a07"}, {"340": "98c6b59c7482973cee0153f948eb6d1b34db4a07"}, {"348": "a66d8e0c27284d04b8803b4d6f46d3b1e2da6df1"}], "ctags": [{"_type": "tag", "name": "TokenStore", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/token_store.py", "pattern": "/^class TokenStore:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_LOCK", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/token_store.py", "pattern": "/^_LOCK = threading.Lock()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_STORE", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/token_store.py", "pattern": "/^_STORE: Dict[str, Dict[str, Dict[str, Any]] ] = {}$/", "language": "Python", "typeref": "typename:Dict[str, Dict[str, Dict[str, Any]] ]", "kind": "variable"}, {"_type": "tag", "name": "delete_token", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/token_store.py", "pattern": "/^    def delete_token(self, tenant_id: str, provider: str) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, tenant_id: str, provider: str)", "scope": "TokenStore", "scopeKind": "class"}, {"_type": "tag", "name": "get_token", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/token_store.py", "pattern": "/^    def get_token(self, tenant_id: str, provider: str) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "member", "signature": "(self, tenant_id: str, provider: str)", "scope": "TokenStore", "scopeKind": "class"}, {"_type": "tag", "name": "save_token", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/db/token_store.py", "pattern": "/^    def save_token(self, tenant_id: str, provider: str, record: Dict[str, Any]) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, tenant_id: str, provider: str, record: Dict[str, Any])", "scope": "TokenStore", "scopeKind": "class"}], "hash": "6ec3e77de0e7215fb00147c003b350b2", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/db/token_store.py", "fields": [{"name": "_LOCK = threading.Lock()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Dict[str, Dict[str, Dict[str, Any]] ] _STORE", "scope": "", "scopeKind": "", "description": "unavailable"}]}