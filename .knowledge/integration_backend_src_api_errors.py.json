{"is_source_file": true, "format": "Python", "description": "Defines a utility function for generating standardized error responses using FastAPI's HTTPException, including structured payload with error details.", "external_files": ["fastapi", "typing"], "external_methods": ["fastapi.HTTPException"], "published": ["error_response"], "classes": [], "methods": [{"name": "HTTPException error_response(code: str, message: str, status_code: int = http_status.HTTP_400_BAD_REQUEST, retry_after: Optional[int] = None, details: Optional[Dict[str, Any]] = None)", "description": "Creates a standardized error response as an HTTPException with a structured payload including error code, message, and optional retry info and details.", "scope": "", "scopeKind": ""}], "calls": ["fastapi.HTTPException"], "search-terms": ["error_response", "HTTPException", "fastapi", "error payload", "standardized error", "error handling"], "state": 2, "file_id": 36, "knowledge_revision": 318, "git_revision": "", "ctags": [{"_type": "tag", "name": "error_response", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/errors.py", "pattern": "/^def error_response(code: str, message: str, status_code: int = http_status.HTTP_400_BAD_REQUEST,/", "language": "Python", "typeref": "typename:HTTPException", "kind": "function", "signature": "(code: str, message: str, status_code: int = http_status.HTTP_400_BAD_REQUEST, retry_after: Optional[int] = None, details: Optional[Dict[str, Any]] = None)"}, {"_type": "tag", "name": "http_status", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/errors.py", "pattern": "/^from fastapi import HTTPException, status as http_status$/", "language": "Python", "kind": "unknown", "nameref": "unknown:status"}], "hash": "5f1aabec9aa6a94b76d1a645fb9119a4", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/api/errors.py", "revision_history": [{"318": ""}]}