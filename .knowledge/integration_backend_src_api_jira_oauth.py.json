{"is_source_file": true, "format": "Python", "description": "This Python source file implements OAuth 2.0 login and callback endpoints for Jira, using FastAPI. It manages OAuth state signing/verification, constructs authorization URLs, handles redirects, and interacts with JiraConnector for token exchange and persistence.", "external_files": ["src.api.schemas", "src.api.oauth_config", "src.connectors.jira.impl"], "external_methods": ["get_jira_oauth_config", "build_atlassian_authorize_url", "get_frontend_base_url_default", "JiraConnector().with_db"], "published": ["jira_oauth_login", "jira_oauth_callback"], "classes": [{"name": "JiraConnector", "description": "Connector class handling Jira OAuth token exchange and persistence."}], "methods": [{"name": "str _get_state_secret()", "description": "Returns a secret string used for HMAC signing of OAuth state cookie, derived from environment variables for security.", "scope": "", "scopeKind": ""}, {"name": "str _sign_state(raw: str)", "description": "Signs a raw string with HMAC-SHA256 using the secret, returning a signature in 'raw.signature' format.", "scope": "", "scopeKind": ""}, {"name": "bool _verify_signed_state(signed: str)", "description": "Verifies that the signed state matches the expected HMAC signature.", "scope": "", "scopeKind": ""}, {"name": "jira_oauth_login( request: Request, return_url: Optional[str] = Query(None, description=\"Optional frontend URL to return to after auth success.\"), state: Optional[str] = Query(None, description=\"Optional client-provided opaque state to echo inside compound state.\"), scopes: Optional[str] = Query(None, description=\"Override default scopes.\"), redirect: Optional[bool] = Query(False, description=\"If true, send 307 redirect to authorize URL.\"), )", "description": "Starts Jira OAuth flow by generating an Atlassian authorization URL, signs CSRF token, sets secure cookie, and responds with JSON or redirect.", "scope": "", "scopeKind": ""}, {"name": "jira_oauth_callback( request: Request, code: Optional[str] = Query(None, description=\"Authorization code returned by Atlassian.\"), state: Optional[str] = Query(None, description=\"State returned by Atlassian.\"), )", "description": "Handles OAuth callback, verifies state, exchanges code for tokens via JiraConnector, and redirects to frontend URL.", "scope": "", "scopeKind": ""}], "calls": ["get_jira_oauth_config", "build_atlassian_authorize_url", "JiraConnector().with_db", "get_frontend_base_url_default", "json.dumps", "json.loads", "secrets.token_urlsafe", "hmac.new", "hmac.compare_digest"], "search-terms": ["jira_oauth", "OAuth login flow", "Jira OAuth callback", "build_atlassian_authorize_url", "state signing", "OAuth state verification"], "state": 2, "file_id": 53, "knowledge_revision": 432, "git_revision": "395220140704eccdc0a80f4d921cc02231c0c030", "revision_history": [{"420": ""}, {"426": "ded04ad11f995fc3d08d55ef1781481c992d12ba"}, {"428": "ded04ad11f995fc3d08d55ef1781481c992d12ba"}, {"429": "ded04ad11f995fc3d08d55ef1781481c992d12ba"}, {"432": "395220140704eccdc0a80f4d921cc02231c0c030"}], "ctags": [{"_type": "tag", "name": "_STATE_COOKIE_NAME", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/jira_oauth.py", "pattern": "/^_STATE_COOKIE_NAME = os.getenv(\"JIRA_STATE_COOKIE_NAME\", \"jira_oauth_state\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_STATE_COOKIE_TTL", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/jira_oauth.py", "pattern": "/^_STATE_COOKIE_TTL = int(os.getenv(\"JIRA_STATE_COOKIE_TTL_SEC\", \"600\"))$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_get_state_secret", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/jira_oauth.py", "pattern": "/^def _get_state_secret() -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_sign_state", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/jira_oauth.py", "pattern": "/^def _sign_state(raw: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(raw: str)"}, {"_type": "tag", "name": "_verify_signed_state", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/jira_oauth.py", "pattern": "/^def _verify_signed_state(signed: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(signed: str)"}, {"_type": "tag", "name": "jira_oauth_callback", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/jira_oauth.py", "pattern": "/^def jira_oauth_callback($/", "language": "Python", "kind": "function", "signature": "( request: Request, code: Optional[str] = Query(None, description=\"Authorization code returned by Atlassian.\"), state: Optional[str] = Query(None, description=\"State returned by Atlassian.\"), )"}, {"_type": "tag", "name": "jira_oauth_login", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/jira_oauth.py", "pattern": "/^def jira_oauth_login($/", "language": "Python", "kind": "function", "signature": "( request: Request, return_url: Optional[str] = Query(None, description=\"Optional frontend URL to return to after auth success.\"), state: Optional[str] = Query(None, description=\"Optional client-provided opaque state to echo inside compound state.\"), scopes: Optional[str] = Query(None, description=\"Override default scopes.\"), redirect: Optional[bool] = Query(False, description=\"If true, send 307 redirect to authorize URL.\"), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/jira_oauth.py", "pattern": "/^router = APIRouter(tags=[\"Auth\"])$/", "language": "Python", "kind": "variable"}], "hash": "8922183b5be52be386639cb92aea20af", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/api/jira_oauth.py", "fields": [{"name": "_STATE_COOKIE_NAME = os.getenv(\"JIRA_STATE_COOKIE_NAME\", \"jira_oauth_state\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "_STATE_COOKIE_TTL = int(os.getenv(\"JIRA_STATE_COOKIE_TTL_SEC\", \"600\"))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "router = APIRouter(tags=[\"Auth\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}