{"is_source_file": true, "format": "Python", "description": "This Python source file implements OAuth login and callback endpoints for Jira integration, including state signing/verification, redirect handling, and token exchange via JiraConnector.", "external_files": ["src.api.schemas", "src.api.oauth_config", "src.connectors.jira.impl"], "external_methods": ["get_jira_oauth_config", "build_atlassian_authorize_url", "get_frontend_base_url_default", "JiraConnector.oauth_callback"], "published": ["router"], "classes": [{"name": "JiraConnector", "description": "Connector class to handle Jira OAuth token exchange, credentials storage, and related operations."}], "methods": [{"name": "str _get_state_secret()", "description": "Returns the secret used for HMAC signing of OAuth state cookies.", "scope": "", "scopeKind": ""}, {"name": "str _sign_state(raw: str)", "description": "Signs a raw string with HMAC-SHA256 to produce a signed token.", "scope": "", "scopeKind": ""}, {"name": "bool _verify_signed_state(signed: str)", "description": "Verifies that a signed state matches its HMAC signature.", "scope": "", "scopeKind": ""}, {"name": "jira_oauth_login( request: Request, return_url: Optional[str] = Query(None, description=\"Optional frontend URL to return to after auth success.\"), state: Optional[str] = Query(None, description=\"Optional client-provided opaque state to echo inside compound state.\"), scopes: Optional[str] = Query(None, description=\"Override default scopes.\"), redirect: Optional[bool] = Query(False, description=\"If true, send 307 redirect to authorize URL.\"), )", "description": "Endpoint to initiate Jira OAuth login, generating an authorization URL, setting CSRF cookie, and optionally redirecting.", "scope": "", "scopeKind": ""}, {"name": "jira_oauth_callback( request: Request, code: Optional[str] = Query(None, description=\"Authorization code returned by Atlassian.\"), state: Optional[str] = Query(None, description=\"State returned by Atlassian.\"), )", "description": "Endpoint to handle OAuth callback, verify state, exchange code for tokens, and redirect to frontend.", "scope": "", "scopeKind": ""}], "calls": ["get_jira_oauth_config()", "build_atlassian_authorize_url()", "JiraConnector().with_db()", "JiraConnector().oauth_callback()", "get_frontend_base_url_default()"], "search-terms": ["jira_oauth", "OAuth flow", "OAuth callback", "state signing", "state verification", "redirect to Jira", "OAuth URL generation", "state cookie", "JiraConnector"], "state": 2, "file_id": 53, "knowledge_revision": 429, "git_revision": "ded04ad11f995fc3d08d55ef1781481c992d12ba", "revision_history": [{"420": ""}, {"426": "ded04ad11f995fc3d08d55ef1781481c992d12ba"}, {"428": "ded04ad11f995fc3d08d55ef1781481c992d12ba"}, {"429": "ded04ad11f995fc3d08d55ef1781481c992d12ba"}], "ctags": [{"_type": "tag", "name": "_STATE_COOKIE_NAME", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/jira_oauth.py", "pattern": "/^_STATE_COOKIE_NAME = os.getenv(\"JIRA_STATE_COOKIE_NAME\", \"jira_oauth_state\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_STATE_COOKIE_TTL", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/jira_oauth.py", "pattern": "/^_STATE_COOKIE_TTL = int(os.getenv(\"JIRA_STATE_COOKIE_TTL_SEC\", \"600\"))$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_get_state_secret", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/jira_oauth.py", "pattern": "/^def _get_state_secret() -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_sign_state", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/jira_oauth.py", "pattern": "/^def _sign_state(raw: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(raw: str)"}, {"_type": "tag", "name": "_verify_signed_state", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/jira_oauth.py", "pattern": "/^def _verify_signed_state(signed: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(signed: str)"}, {"_type": "tag", "name": "jira_oauth_callback", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/jira_oauth.py", "pattern": "/^def jira_oauth_callback($/", "language": "Python", "kind": "function", "signature": "( request: Request, code: Optional[str] = Query(None, description=\"Authorization code returned by Atlassian.\"), state: Optional[str] = Query(None, description=\"State returned by Atlassian.\"), )"}, {"_type": "tag", "name": "jira_oauth_login", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/jira_oauth.py", "pattern": "/^def jira_oauth_login($/", "language": "Python", "kind": "function", "signature": "( request: Request, return_url: Optional[str] = Query(None, description=\"Optional frontend URL to return to after auth success.\"), state: Optional[str] = Query(None, description=\"Optional client-provided opaque state to echo inside compound state.\"), scopes: Optional[str] = Query(None, description=\"Override default scopes.\"), redirect: Optional[bool] = Query(False, description=\"If true, send 307 redirect to authorize URL.\"), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/jira_oauth.py", "pattern": "/^router = APIRouter(tags=[\"Auth\"])$/", "language": "Python", "kind": "variable"}], "hash": "8922183b5be52be386639cb92aea20af", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/api/jira_oauth.py", "fields": [{"name": "_STATE_COOKIE_NAME = os.getenv(\"JIRA_STATE_COOKIE_NAME\", \"jira_oauth_state\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "_STATE_COOKIE_TTL = int(os.getenv(\"JIRA_STATE_COOKIE_TTL_SEC\", \"600\"))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "router = APIRouter(tags=[\"Auth\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}