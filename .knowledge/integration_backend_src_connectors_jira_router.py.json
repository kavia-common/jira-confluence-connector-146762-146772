{"is_source_file": true, "format": "Python", "description": "This file defines FastAPI route handlers for Jira integration endpoints, including status, search, create, OAuth login and callback, and resource retrieval. It acts as a router for Jira connector operations, handling HTTP requests and responses, managing tenant identification, and coordinating with the JiraConnector implementation.", "external_files": ["src.connectors.base.models", "src.connectors.jira.impl", "src.db.config", "src.api.main"], "external_methods": ["fastapi.APIRouter", "fastapi.Depends", "fastapi.HTTPException", "fastapi.Query", "fastapi.Request", "fastapi.status", "fastapi.responses.JSONResponse", "fastapi.responses.RedirectResponse", "src.connectors.jira.impl.JiraConnector.with_db", "src.connectors.jira.impl.JiraConnector.connection_status", "src.connectors.jira.impl.JiraConnector.search", "src.connectors.jira.impl.JiraConnector.create", "src.connectors.jira.impl.JiraConnector.oauth_authorize_url", "src.connectors.jira.impl.JiraConnector.oauth_callback", "src.connectors.jira.impl.JiraConnector.get_resource", "src.api.main._gen_csrf_state", "src.api.main._sign_state"], "published": ["router"], "classes": [], "methods": [{"name": "str _resolve_tenant_id(request: Request, tenant_id_qs: Optional[str])", "description": "Resolves the tenant ID from headers, query parameters, or defaults to 'default'.", "scope": "", "scopeKind": ""}, {"name": "ConnectionStatus get_status(request: Request, db=Depends(get_db), tenant_id: Optional[str] = Query(None))", "description": "Returns current connection status for Jira for a specific tenant.", "scope": "", "scopeKind": ""}, {"name": "List[SearchResultItem] search( request: Request, q: str = Query(\"\", description=\"Search query\"), limit: int = Query(10, ge=1, le=25), filters: Optional[str] = Query(None, description=\"Optional JSON string of filter mapping\"), tenant_id: Optional[str] = Query(None), db=Depends(get_db), )", "description": "Performs a search in Jira with optional filters and returns normalized search result items.", "scope": "", "scopeKind": ""}, {"name": "CreateResult create_resource( request: Request, payload: Dict[str, Any], tenant_id: Optional[str] = Query(None), db=Depends(get_db), )", "description": "Creates a Jira resource with provided payload within a tenant context.", "scope": "", "scopeKind": ""}, {"name": "oauth_login( request: Request, tenant_id: Optional[str] = Query(None), state: Optional[str] = Query(None), scopes: Optional[str] = Query(None), redirect: Optional[bool] = Query(False), db=Depends(get_db), )", "description": "Initiates OAuth login flow, returning authorize URL or redirecting.", "scope": "", "scopeKind": ""}, {"name": "ConnectionStatus oauth_callback( request: Request, code: Optional[str] = Query(None), state: Optional[str] = Query(None), tenant_id: Optional[str] = Query(None), db=Depends(get_db), )", "description": "Handles OAuth callback, exchanges code for tokens, and persists credentials.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] get_resource( request: Request, key: str, tenant_id: Optional[str] = Query(None), db=Depends(get_db) )", "description": "Fetches a Jira resource by key (stubbed implementation).", "scope": "", "scopeKind": ""}], "calls": ["JiraConnector().with_db", "connector.connection_status", "connector.search", "connector.create", "connector.oauth_authorize_url", "connector.oauth_callback", "connector.get_resource", "_gen_csrf_state", "_sign_state"], "search-terms": ["Jira", "OAuth", "search", "create", "connection status", "tenant ID", "router", "FastAPI endpoints"], "state": 2, "file_id": 25, "knowledge_revision": 273, "git_revision": "050999a09b790ceb7c6b7f96d5411b60fcdc74b2", "revision_history": [{"144": ""}, {"273": "050999a09b790ceb7c6b7f96d5411b60fcdc74b2"}], "ctags": [{"_type": "tag", "name": "_json", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^    import json as _json$/", "file": true, "language": "Python", "kind": "namespace", "scope": "oauth_login", "scopeKind": "function", "nameref": "module:json"}, {"_type": "tag", "name": "_resolve_tenant_id", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^def _resolve_tenant_id(request: Request, tenant_id_qs: Optional[str]) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(request: Request, tenant_id_qs: Optional[str])"}, {"_type": "tag", "name": "create_resource", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^def create_resource($/", "language": "Python", "typeref": "typename:CreateResult", "kind": "function", "signature": "( request: Request, payload: Dict[str, Any], tenant_id: Optional[str] = Query(None), db=Depends(get_db), )"}, {"_type": "tag", "name": "get_resource", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^def get_resource($/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "( request: Request, key: str, tenant_id: Optional[str] = Query(None), db=Depends(get_db) )"}, {"_type": "tag", "name": "get_status", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^def get_status(request: Request, db=Depends(get_db), tenant_id: Optional[str] = Query(None)) -> /", "language": "Python", "typeref": "typename:ConnectionStatus", "kind": "function", "signature": "(request: Request, db=Depends(get_db), tenant_id: Optional[str] = Query(None))"}, {"_type": "tag", "name": "oauth_callback", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^def oauth_callback($/", "language": "Python", "typeref": "typename:ConnectionStatus", "kind": "function", "signature": "( request: Request, code: Optional[str] = Query(None), state: Optional[str] = Query(None), tenant_id: Optional[str] = Query(None), db=Depends(get_db), )"}, {"_type": "tag", "name": "oauth_login", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^def oauth_login($/", "language": "Python", "kind": "function", "signature": "( request: Request, tenant_id: Optional[str] = Query(None), state: Optional[str] = Query(None), scopes: Optional[str] = Query(None), redirect: Optional[bool] = Query(False), db=Depends(get_db), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^router = APIRouter(prefix=\"\\/jira\", tags=[\"Connectors\", \"Jira\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "search", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^def search($/", "language": "Python", "typeref": "typename:List[SearchResultItem]", "kind": "function", "signature": "( request: Request, q: str = Query(\"\", description=\"Search query\"), limit: int = Query(10, ge=1, le=25), filters: Optional[str] = Query(None, description=\"Optional JSON string of filter mapping\"), tenant_id: Optional[str] = Query(None), db=Depends(get_db), )"}], "hash": "c6411749519e3b71208ce90eabd5d57e", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/connectors/jira/router.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/jira\", tags=[\"Connectors\", \"Jira\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}