{"is_source_file": true, "format": "Python", "description": "This file defines API routes for interacting with Jira via FastAPI. It includes endpoints for checking connection status, searching resources, creating resources, initiating OAuth login, handling OAuth callback, and fetching Jira resources by key. The routes depend on a JiraConnector class for the core logic, and are tagged under Jira-related functionalities.", "external_files": ["src.connectors.base.models", "src.connectors.jira.impl", "src.db.config"], "external_methods": ["get_db", "JiraConnector().with_db", "ConnectionStatus", "SearchResultItem", "CreateResult", "OAuth_url", "JiraConnector().oauth_authorize_url", "JiraConnector().oauth_callback", "JiraConnector().get_resource"], "published": ["router"], "classes": [], "methods": [{"name": "str _resolve_tenant_id(request: Request, tenant_id_qs: Optional[str])", "description": "Resolves tenant ID from headers or query parameters, defaults to 'default'.", "scope": "", "scopeKind": ""}, {"name": "ConnectionStatus get_status(request: Request, db=Depends(get_db), tenant_id: Optional[str] = Query(None))", "description": "Returns connection status for a tenant's Jira connection.", "scope": "", "scopeKind": ""}, {"name": "List[SearchResultItem] search( request: Request, q: str = Query(\"\", description=\"Search query\"), limit: int = Query(10, ge=1, le=25), filters: Optional[str] = Query(None, description=\"Optional JSON string of filter mapping\"), tenant_id: Optional[str] = Query(None), db=Depends(get_db), )", "description": "Searches Jira resources based on query parameters, including optional filters.", "scope": "", "scopeKind": ""}, {"name": "CreateResult create_resource( request: Request, payload: Dict[str, Any], tenant_id: Optional[str] = Query(None), db=Depends(get_db), )", "description": "Creates a new Jira resource with the provided payload.", "scope": "", "scopeKind": ""}, {"name": "oauth_login( request: Request, tenant_id: Optional[str] = Query(None), state: Optional[str] = Query(None), scopes: Optional[str] = Query(None), redirect: Optional[bool] = Query(False), db=Depends(get_db), )", "description": "Initiates OAuth login for Jira, either returning a URL or redirecting.", "scope": "", "scopeKind": ""}, {"name": "ConnectionStatus oauth_callback( request: Request, code: Optional[str] = Query(None), state: Optional[str] = Query(None), tenant_id: Optional[str] = Query(None), db=Depends(get_db), )", "description": "Handles OAuth callback, exchanging code for tokens and storing them.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] get_resource( request: Request, key: str, tenant_id: Optional[str] = Query(None), db=Depends(get_db) )", "description": "Fetches a Jira resource by key; currently a stub.", "scope": "", "scopeKind": ""}], "calls": ["JiraConnector().with_db", "connector.connection_status", "connector.search", "connector.create", "connector.oauth_authorize_url", "connector.oauth_callback", "connector.get_resource"], "search-terms": ["FastAPI", "JiraOAuth", "tenant resolution", "search Jira", "create Jira resource", "OAuth callback", "Jira connection status"], "state": 2, "file_id": 25, "knowledge_revision": 144, "git_revision": "", "ctags": [{"_type": "tag", "name": "_resolve_tenant_id", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^def _resolve_tenant_id(request: Request, tenant_id_qs: Optional[str]) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(request: Request, tenant_id_qs: Optional[str])"}, {"_type": "tag", "name": "create_resource", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^def create_resource($/", "language": "Python", "typeref": "typename:CreateResult", "kind": "function", "signature": "( request: Request, payload: Dict[str, Any], tenant_id: Optional[str] = Query(None), db=Depends(get_db), )"}, {"_type": "tag", "name": "get_resource", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^def get_resource($/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "( request: Request, key: str, tenant_id: Optional[str] = Query(None), db=Depends(get_db) )"}, {"_type": "tag", "name": "get_status", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^def get_status(request: Request, db=Depends(get_db), tenant_id: Optional[str] = Query(None)) -> /", "language": "Python", "typeref": "typename:ConnectionStatus", "kind": "function", "signature": "(request: Request, db=Depends(get_db), tenant_id: Optional[str] = Query(None))"}, {"_type": "tag", "name": "oauth_callback", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^def oauth_callback($/", "language": "Python", "typeref": "typename:ConnectionStatus", "kind": "function", "signature": "( request: Request, code: Optional[str] = Query(None), state: Optional[str] = Query(None), tenant_id: Optional[str] = Query(None), db=Depends(get_db), )"}, {"_type": "tag", "name": "oauth_login", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^def oauth_login($/", "language": "Python", "kind": "function", "signature": "( request: Request, tenant_id: Optional[str] = Query(None), state: Optional[str] = Query(None), scopes: Optional[str] = Query(None), redirect: Optional[bool] = Query(False), db=Depends(get_db), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^router = APIRouter(prefix=\"\\/jira\", tags=[\"Connectors\", \"Jira\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "search", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^def search($/", "language": "Python", "typeref": "typename:List[SearchResultItem]", "kind": "function", "signature": "( request: Request, q: str = Query(\"\", description=\"Search query\"), limit: int = Query(10, ge=1, le=25), filters: Optional[str] = Query(None, description=\"Optional JSON string of filter mapping\"), tenant_id: Optional[str] = Query(None), db=Depends(get_db), )"}], "hash": "820ee3d868e3135a24f1e81d3d1e5eff", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/connectors/jira/router.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/jira\", tags=[\"Connectors\", \"Jira\"])", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"144": ""}]}