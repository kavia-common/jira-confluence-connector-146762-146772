{"is_source_file": true, "format": "Python", "description": "This file defines API routes for a Jira connector using FastAPI. It includes endpoints for checking connection status, listing projects, performing searches, creating issues, deleting/updating the connection, and internal helper functions. The code interacts with a Jira client and token store, and employs FastAPI's routing and dependency injection features.", "external_files": ["../base/models", ".../db/token_store", ".../api/errors", ".client"], "external_methods": ["get_tokens", "delete_tokens", "error_response", "JiraClient.list_projects", "JiraClient.search_jql", "JiraClient.create_issue", "update_meta"], "published": ["get_status", "list_projects", "search", "create_resource", "delete_connection", "patch_connection"], "classes": [], "methods": [{"name": "str _tenant(x_tenant_id: Optional[str], tenant_id_query: Optional[str])", "description": "Helper function to determine tenant ID based on headers and query parameter, defaulting to 'default'.", "scope": "", "scopeKind": ""}, {"name": "get_status(x_tenant_id: Optional[str] = Header(default=None, alias=\"X-Tenant-Id\"), tenant_id: Optional[str] = Query(default=None))", "description": "Endpoint to return Jira connection status for a tenant.", "scope": "", "scopeKind": ""}, {"name": "list_projects(x_tenant_id: Optional[str] = Header(default=None, alias=\"X-Tenant-Id\"), tenant_id: Optional[str] = Query(default=None))", "description": "Endpoint to list Jira projects for an authenticated tenant.", "scope": "", "scopeKind": ""}, {"name": "search(q: str = Query(default=\"\", description=\"Search JQL\"), limit: int = Query(default=10, ge=1, le=25), filters: Optional[str] = Query(default=None, description=\"Optional JSON string of filter mapping\"), x_tenant_id: Optional[str] = Header(default=None, alias=\"X-Tenant-Id\"), tenant_id: Optional[str] = Query(default=None))", "description": "Endpoint to perform a search query on Jira resources using JQL, returning normalized search results.", "scope": "", "scopeKind": ""}, {"name": "create_resource(payload: Dict[str, Any], x_tenant_id: Optional[str] = Header(default=None, alias=\"X-Tenant-Id\"), tenant_id: Optional[str] = Query(default=None))", "description": "Endpoint to create a Jira issue resource using provided payload.", "scope": "", "scopeKind": ""}, {"name": "delete_connection(x_tenant_id: Optional[str] = Header(default=None, alias=\"X-Tenant-Id\"), tenant_id: Optional[str] = Query(default=None))", "description": "Endpoint to revoke/purge Jira tokens for a tenant.", "scope": "", "scopeKind": ""}, {"name": "patch_connection(body: Dict[str, Any], x_tenant_id: Optional[str] = Header(default=None, alias=\"X-Tenant-Id\"), tenant_id: Optional[str] = Query(default=None))", "description": "Endpoint to update the Jira site/base URL for a tenant.", "scope": "", "scopeKind": ""}], "calls": ["get_tokens", "delete_tokens", "error_response", "JiraClient. list_projects", "JiraClient.search_jql", "JiraClient.create_issue", "update_meta"], "search-terms": ["FastAPI router", "Jira connector", "tenant management", "Jira project listing", "Jira search", "create Jira issue", "token management"], "state": 2, "file_id": 25, "knowledge_revision": 329, "git_revision": "585ba8c490e4e71530e92ea0772d4da81fc955d9", "revision_history": [{"144": ""}, {"273": "050999a09b790ceb7c6b7f96d5411b60fcdc74b2"}, {"279": "94bc2ceb52412e3d8c09bb6d543ed22dcf1a599d"}, {"281": "94bc2ceb52412e3d8c09bb6d543ed22dcf1a599d"}, {"329": "585ba8c490e4e71530e92ea0772d4da81fc955d9"}], "ctags": [{"_type": "tag", "name": "_tenant", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^def _tenant(x_tenant_id: Optional[str], tenant_id_query: Optional[str]) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(x_tenant_id: Optional[str], tenant_id_query: Optional[str])"}, {"_type": "tag", "name": "create_resource", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^def create_resource(payload: Dict[str, Any], x_tenant_id: Optional[str] = Header(default=None, a/", "language": "Python", "kind": "function", "signature": "(payload: Dict[str, Any], x_tenant_id: Optional[str] = Header(default=None, alias=\"X-Tenant-Id\"), tenant_id: Optional[str] = Query(default=None))"}, {"_type": "tag", "name": "delete_connection", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^def delete_connection(x_tenant_id: Optional[str] = Header(default=None, alias=\"X-Tenant-Id\"), te/", "language": "Python", "kind": "function", "signature": "(x_tenant_id: Optional[str] = Header(default=None, alias=\"X-Tenant-Id\"), tenant_id: Optional[str] = Query(default=None))"}, {"_type": "tag", "name": "get_status", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^def get_status(x_tenant_id: Optional[str] = Header(default=None, alias=\"X-Tenant-Id\"), tenant_id/", "language": "Python", "kind": "function", "signature": "(x_tenant_id: Optional[str] = Header(default=None, alias=\"X-Tenant-Id\"), tenant_id: Optional[str] = Query(default=None))"}, {"_type": "tag", "name": "http_status", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^from fastapi import status as http_status$/", "language": "Python", "kind": "unknown", "nameref": "unknown:status"}, {"_type": "tag", "name": "list_projects", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^def list_projects(x_tenant_id: Optional[str] = Header(default=None, alias=\"X-Tenant-Id\"), tenant/", "language": "Python", "kind": "function", "signature": "(x_tenant_id: Optional[str] = Header(default=None, alias=\"X-Tenant-Id\"), tenant_id: Optional[str] = Query(default=None))"}, {"_type": "tag", "name": "patch_connection", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^def patch_connection(body: Dict[str, Any], x_tenant_id: Optional[str] = Header(default=None, ali/", "language": "Python", "kind": "function", "signature": "(body: Dict[str, Any], x_tenant_id: Optional[str] = Header(default=None, alias=\"X-Tenant-Id\"), tenant_id: Optional[str] = Query(default=None))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^router = APIRouter(prefix=\"\\/connectors\\/jira\", tags=[\"Connectors\", \"Jira\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "search", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^def search(q: str = Query(default=\"\", description=\"Search JQL\"), limit: int = Query(default=10, /", "language": "Python", "kind": "function", "signature": "(q: str = Query(default=\"\", description=\"Search JQL\"), limit: int = Query(default=10, ge=1, le=25), filters: Optional[str] = Query(default=None, description=\"Optional JSON string of filter mapping\"), x_tenant_id: Optional[str] = Header(default=None, alias=\"X-Tenant-Id\"), tenant_id: Optional[str] = Query(default=None))"}, {"_type": "tag", "name": "update_meta_store", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^    from ...db.token_store import update_meta as update_meta_store$/", "file": true, "language": "Python", "kind": "unknown", "scope": "patch_connection", "scopeKind": "function", "nameref": "unknown:update_meta"}], "hash": "cbd40eb5ee3b3f3aa57007ee13b49185", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/connectors/jira/router.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/connectors\\/jira\", tags=[\"Connectors\", \"Jira\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}