{"is_source_file": true, "format": "Python", "description": "This is a FastAPI router module for Jira integration. It defines API endpoints for status checks, resource search and creation, OAuth login and callback, and resource retrieval. The module interacts with JiraConnector for backend operations and manages OAuth flows, tenant resolution, and search/filter handling.", "external_files": ["src.connectors.base.models", "src.connectors.jira.impl", "src.db.config", "src.api.main"], "external_methods": ["get_db", "_gen_csrf_state", "_sign_state", "_log_event", "_verify_signed_state"], "published": ["router"], "classes": [{"name": "APIRouter", "description": "FastAPI router instance to define endpoints."}], "methods": [{"name": "str _resolve_tenant_id(request: Request, tenant_id_qs: Optional[str])", "description": "Resolves the tenant ID from request headers, query, or defaults to 'default'.", "scope": "", "scopeKind": ""}, {"name": "ConnectionStatus get_status(request: Request, db=Depends(get_db), tenant_id: Optional[str] = Query(None))", "description": "Returns the connection status of Jira for a tenant.", "scope": "", "scopeKind": ""}, {"name": "List[SearchResultItem] search( request: Request, q: str = Query(\"\", description=\"Search query\"), limit: int = Query(10, ge=1, le=25), filters: Optional[str] = Query(None, description=\"Optional JSON string of filter mapping\"), tenant_id: Optional[str] = Query(None), db=Depends(get_db), )", "description": "Performs a search on Jira resources based on query and filters.", "scope": "", "scopeKind": ""}, {"name": "CreateResult create_resource( request: Request, payload: Dict[str, Any], tenant_id: Optional[str] = Query(None), db=Depends(get_db), )", "description": "Creates a Jira resource with provided payload.", "scope": "", "scopeKind": ""}, {"name": "oauth_login( request: Request, tenant_id: Optional[str] = Query(None), state: Optional[str] = Query(None), scopes: Optional[str] = Query(None), redirect: Optional[bool] = Query(False), db=Depends(get_db), )", "description": "Initiates OAuth login flow, returns URL or redirects with cookie set.", "scope": "", "scopeKind": ""}, {"name": "ConnectionStatus oauth_callback( request: Request, code: Optional[str] = Query(None), state: Optional[str] = Query(None), tenant_id: Optional[str] = Query(None), db=Depends(get_db), )", "description": "Handles OAuth callback, exchanges code for tokens, and verifies state.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] get_resource( request: Request, key: str, tenant_id: Optional[str] = Query(None), db=Depends(get_db) )", "description": "Fetches a Jira resource by key, currently stubbed.", "scope": "", "scopeKind": ""}], "calls": ["JiraConnector().with_db", "connector.connection_status", "connector.search", "connector.create", "connector.oauth_authorize_url", "connector.oauth_callback", "connector.get_resource"], "search-terms": ["Jira", "OAuth", "ConnectionStatus", "search", "create", "status", "/jira", "router", "connectors"], "state": 2, "file_id": 25, "knowledge_revision": 281, "git_revision": "94bc2ceb52412e3d8c09bb6d543ed22dcf1a599d", "revision_history": [{"144": ""}, {"273": "050999a09b790ceb7c6b7f96d5411b60fcdc74b2"}, {"279": "94bc2ceb52412e3d8c09bb6d543ed22dcf1a599d"}, {"281": "94bc2ceb52412e3d8c09bb6d543ed22dcf1a599d"}], "ctags": [{"_type": "tag", "name": "_hmac", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^    import hmac as _hmac$/", "file": true, "language": "Python", "kind": "namespace", "scope": "oauth_callback", "scopeKind": "function", "nameref": "module:hmac"}, {"_type": "tag", "name": "_json", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^        import json as _json$/", "file": true, "language": "Python", "kind": "namespace", "scope": "oauth_callback", "scopeKind": "function", "nameref": "module:json"}, {"_type": "tag", "name": "_json", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^    import json as _json$/", "file": true, "language": "Python", "kind": "namespace", "scope": "oauth_login", "scopeKind": "function", "nameref": "module:json"}, {"_type": "tag", "name": "_resolve_tenant_id", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^def _resolve_tenant_id(request: Request, tenant_id_qs: Optional[str]) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(request: Request, tenant_id_qs: Optional[str])"}, {"_type": "tag", "name": "_vss", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^    from src.api.main import _verify_signed_state as _vss$/", "file": true, "language": "Python", "kind": "unknown", "scope": "oauth_callback", "scopeKind": "function", "nameref": "unknown:_verify_signed_state"}, {"_type": "tag", "name": "create_resource", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^def create_resource($/", "language": "Python", "typeref": "typename:CreateResult", "kind": "function", "signature": "( request: Request, payload: Dict[str, Any], tenant_id: Optional[str] = Query(None), db=Depends(get_db), )"}, {"_type": "tag", "name": "get_resource", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^def get_resource($/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "( request: Request, key: str, tenant_id: Optional[str] = Query(None), db=Depends(get_db) )"}, {"_type": "tag", "name": "get_status", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^def get_status(request: Request, db=Depends(get_db), tenant_id: Optional[str] = Query(None)) -> /", "language": "Python", "typeref": "typename:ConnectionStatus", "kind": "function", "signature": "(request: Request, db=Depends(get_db), tenant_id: Optional[str] = Query(None))"}, {"_type": "tag", "name": "oauth_callback", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^def oauth_callback($/", "language": "Python", "typeref": "typename:ConnectionStatus", "kind": "function", "signature": "( request: Request, code: Optional[str] = Query(None), state: Optional[str] = Query(None), tenant_id: Optional[str] = Query(None), db=Depends(get_db), )"}, {"_type": "tag", "name": "oauth_login", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^def oauth_login($/", "language": "Python", "kind": "function", "signature": "( request: Request, tenant_id: Optional[str] = Query(None), state: Optional[str] = Query(None), scopes: Optional[str] = Query(None), redirect: Optional[bool] = Query(False), db=Depends(get_db), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^router = APIRouter(prefix=\"\\/jira\", tags=[\"Connectors\", \"Jira\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "search", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/jira/router.py", "pattern": "/^def search($/", "language": "Python", "typeref": "typename:List[SearchResultItem]", "kind": "function", "signature": "( request: Request, q: str = Query(\"\", description=\"Search query\"), limit: int = Query(10, ge=1, le=25), filters: Optional[str] = Query(None, description=\"Optional JSON string of filter mapping\"), tenant_id: Optional[str] = Query(None), db=Depends(get_db), )"}], "hash": "e9db2276a448ac88c782de7baf4c294b", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/connectors/jira/router.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/jira\", tags=[\"Connectors\", \"Jira\"])", "scope": "", "scopeKind": "", "description": "unavailable"}]}