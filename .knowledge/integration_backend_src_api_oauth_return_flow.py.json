{"is_source_file": true, "format": "Python", "description": "This file implements OAuth login and callback flow for Atlassian through FastAPI, handling OAuth endpoint setup, session management, state validation, token exchange, and redirect handling, with environment variable configuration and in-memory store usage for demo purposes.", "external_files": ["oauth_settings", "oauth_pkce", "redis_client"], "external_methods": ["get_atlassian_oauth_config", "get_default_scopes", "generate_code_verifier", "generate_code_challenge", "generate_state", "get_or_create_session_id", "save_session", "save_tokens", "get_session", "SessionData", "save_oauth_state", "consume_oauth_state", "export_oauth_state_diagnostics", "get_state_ttl_seconds"], "published": ["router", "oauth_atlassian_login", "oauth_atlassian_callback", "oauth_diagnostics"], "classes": [{"name": "SessionData", "description": "Data structure for session storage, including state, code_verifier, and tokens."}], "methods": [{"name": "bool _is_absolute_url(url: str | None)", "description": "Validates whether a URL string is an absolute URL using scheme and netloc.", "scope": "", "scopeKind": ""}, {"name": "str _encode_message(message: str)", "description": "URL-encodes a message string for safe transmission in query parameters.", "scope": "", "scopeKind": ""}, {"name": "str _mask_state(state: str)", "description": "Returns a masked representation of a state string for logging.", "scope": "", "scopeKind": ""}, {"name": "oauth_atlassian_login(request: Request, return_url: Optional[str] = None, scope: Optional[str] = None)", "description": "Starts the OAuth login flow: validates parameters, generates PKCE and state, stores session, and redirects to Atlassian authorization URL.", "scope": "", "scopeKind": ""}, {"name": "oauth_atlassian_callback(request: Request, code: Optional[str] = None, state: Optional[str] = None)", "description": "Handles the OAuth callback: validates state, exchanges code for tokens, stores tokens, and redirects back to original return_url.", "scope": "", "scopeKind": ""}, {"name": "oauth_diagnostics()", "description": "Provides diagnostic info about active OAuth states and TTL for debugging.", "scope": "", "scopeKind": ""}], "calls": ["get_atlassian_oauth_config", "get_default_scopes", "generate_code_verifier", "generate_code_challenge", "generate_state", "get_or_create_session_id", "save_session", "save_oauth_state", "consume_oauth_state", "save_tokens", "get_session", "httpx.AsyncClient.post", "export_oauth_state_diagnostics", "get_state_ttl_seconds"], "search-terms": ["OAuth", "atlassian", "callback", "login", "session", "PKCE", "state", "redirect", "token exchange", "FastAPI APIRouter"], "state": 2, "file_id": 26, "knowledge_revision": 188, "git_revision": "56fe4bfe23393285f6c027815fe884f9d25c3ab3", "revision_history": [{"144": ""}, {"151": "6b909d8b8bea072b4648907235ef6d3f922152e3"}, {"154": "6b909d8b8bea072b4648907235ef6d3f922152e3"}, {"155": "6b909d8b8bea072b4648907235ef6d3f922152e3"}, {"156": "6b909d8b8bea072b4648907235ef6d3f922152e3"}, {"158": "578c6d17f21ec36ed0102cc502cf09a5c6fadef5"}, {"160": "578c6d17f21ec36ed0102cc502cf09a5c6fadef5"}, {"178": "fbdd2f8fe4834de9017aaae09b7b748f04568b6c"}, {"182": "56fe4bfe23393285f6c027815fe884f9d25c3ab3"}, {"183": "56fe4bfe23393285f6c027815fe884f9d25c3ab3"}, {"184": "56fe4bfe23393285f6c027815fe884f9d25c3ab3"}, {"186": "56fe4bfe23393285f6c027815fe884f9d25c3ab3"}, {"187": "56fe4bfe23393285f6c027815fe884f9d25c3ab3"}, {"188": "56fe4bfe23393285f6c027815fe884f9d25c3ab3"}], "ctags": [{"_type": "tag", "name": "_encode_message", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/oauth_return_flow.py", "pattern": "/^def _encode_message(message: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(message: str)"}, {"_type": "tag", "name": "_is_absolute_url", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/oauth_return_flow.py", "pattern": "/^def _is_absolute_url(url: str | None) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(url: str | None)"}, {"_type": "tag", "name": "_mask_state", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/oauth_return_flow.py", "pattern": "/^def _mask_state(state: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(state: str)"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/oauth_return_flow.py", "pattern": "/^logger = logging.getLogger(\"oauth.return\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "oauth_atlassian_callback", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/oauth_return_flow.py", "pattern": "/^async def oauth_atlassian_callback(request: Request, code: Optional[str] = None, state: Optional/", "language": "Python", "kind": "function", "signature": "(request: Request, code: Optional[str] = None, state: Optional[str] = None)"}, {"_type": "tag", "name": "oauth_atlassian_login", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/oauth_return_flow.py", "pattern": "/^async def oauth_atlassian_login(request: Request, return_url: Optional[str] = None, scope: Optio/", "language": "Python", "kind": "function", "signature": "(request: Request, return_url: Optional[str] = None, scope: Optional[str] = None)"}, {"_type": "tag", "name": "oauth_diagnostics", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/oauth_return_flow.py", "pattern": "/^async def oauth_diagnostics():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/oauth_return_flow.py", "pattern": "/^router = APIRouter()$/", "language": "Python", "kind": "variable"}], "hash": "3ff5e0ea5e577495d2e92ce6c0f8cc08", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/api/oauth_return_flow.py", "fields": [{"name": "logger = logging.getLogger(\"oauth.return\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}]}