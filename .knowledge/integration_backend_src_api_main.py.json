{"is_source_file": true, "format": "Python", "description": "This is a Python source file implementing a backend REST API using FastAPI, providing endpoints for health checks, user management, OAuth 2.0 flows for Jira and Confluence, and integration placeholders for fetching and managing Jira projects and Confluence pages. It includes route handlers, dependency injections, and external API interactions, mainly focusing on OAuth flow initiation, callback handling, and CRUD operations for user-related resources.", "external_files": ["src/db/config.py", "src/db/service.py", "src.api.oauth_config.py", "src.api.schemas.py", "src.api.oauth_config.py", "src.api.schemas.py"], "external_methods": ["get_db", "create_user", "list_users", "get_user_by_id", "upsert_jira_project", "list_jira_projects_for_user", "upsert_confluence_page", "list_confluence_pages_for_user", "get_jira_oauth_config", "get_confluence_oauth_config", "get_frontend_base_url_default", "get_atlassian_base_url"], "published": ["app", "health_check", "jira_login", "jira_callback", "create_user_endpoint", "list_users_endpoint", "get_user_endpoint", "confluence_login", "confluence_callback", "connect_jira", "connect_confluence", "fetch_jira_projects", "fetch_confluence_pages", "upsert_jira_project_endpoint", "list_jira_projects_endpoint", "upsert_confluence_page_endpoint", "list_confluence_pages_endpoint", "jira_login_api_alias", "jira_callback_api_alias", "confluence_login_api_alias", "confluence_callback_api_alias", "atlassian_callback_alias"], "classes": [], "methods": [{"name": "Dict[str,Any] _ocean_response(data: Any, message: str = \"ok\")", "description": "Wraps response data in a standardized 'Ocean Professional' envelope with status, message, and data fields.", "scope": "", "scopeKind": ""}, {"name": "health_check()", "description": "Provides a health check endpoint returning API health status.", "scope": "", "scopeKind": ""}, {"name": "jira_login(state: Optional[str] = None, scope: Optional[str] = None)", "description": "Initiates the Jira OAuth 2.0 login flow by redirecting to Atlassian authorization URL.", "scope": "", "scopeKind": ""}, {"name": "jira_callback(request: Request, db=Depends(get_db), code: Optional[str] = None, state: Optional[str] = None)", "description": "Handles the OAuth callback for Jira, exchanges code for tokens, saves tokens to user, and redirects back.", "scope": "", "scopeKind": ""}, {"name": "create_user_endpoint(payload: UserCreate, db=Depends(get_db))", "description": "Creates a new user record in the database or returns an existing one.", "scope": "", "scopeKind": ""}, {"name": "list_users_endpoint(db=Depends(get_db))", "description": "Returns a list of all users.", "scope": "", "scopeKind": ""}, {"name": "get_user_endpoint(user_id: int, db=Depends(get_db))", "description": "Retrieves a user by their ID, raises 404 if not found.", "scope": "", "scopeKind": ""}, {"name": "confluence_login(state: Optional[str] = None, scope: Optional[str] = None)", "description": "Initiates the Confluence OAuth 2.0 login flow by redirecting to Atlassian authorization URL.", "scope": "", "scopeKind": ""}, {"name": "confluence_callback(request: Request, db=Depends(get_db), code: Optional[str] = None, state: Optional[str] = None)", "description": "Handles the OAuth callback for Confluence, exchanges code for tokens, saves tokens to user, and redirects.", "scope": "", "scopeKind": ""}, {"name": "connect_jira(db=Depends(get_db), payload: UserCreate | None = None)", "description": "Guides client to start Jira OAuth by returning a redirect URL.", "scope": "", "scopeKind": ""}, {"name": "connect_confluence(db=Depends(get_db), payload: UserCreate | None = None)", "description": "Guides client to start Confluence OAuth by returning a redirect URL.", "scope": "", "scopeKind": ""}, {"name": "fetch_jira_projects(db=Depends(get_db), owner_id: int | None = None)", "description": "Placeholder to fetch JIRA projects; returns stored projects for a user.", "scope": "", "scopeKind": ""}, {"name": "fetch_confluence_pages(db=Depends(get_db), owner_id: int | None = None)", "description": "Placeholder to fetch Confluence pages; returns stored pages for a user.", "scope": "", "scopeKind": ""}, {"name": "upsert_jira_project_endpoint(payload: JiraProjectCreate, db=Depends(get_db))", "description": "Creates or updates a JIRA project record in the database.", "scope": "", "scopeKind": ""}, {"name": "list_jira_projects_endpoint(owner_id: int, db=Depends(get_db))", "description": "Lists all JIRA projects for a given user.", "scope": "", "scopeKind": ""}, {"name": "upsert_confluence_page_endpoint(payload: ConfluencePageCreate, db=Depends(get_db))", "description": "Creates or updates a Confluence page record.", "scope": "", "scopeKind": ""}, {"name": "list_confluence_pages_endpoint(owner_id: int, db=Depends(get_db))", "description": "Lists all Confluence pages for a given user.", "scope": "", "scopeKind": ""}, {"name": "jira_login_api_alias(state: Optional[str] = None, scope: Optional[str] = None)", "description": "Proxy route for starting Jira OAuth flow, compatible with /api prefix.", "scope": "", "scopeKind": ""}, {"name": "jira_callback_api_alias(request: Request, db=Depends(get_db), code: Optional[str] = None, state: Optional[str] = None)", "description": "Proxy route for Jira OAuth callback, compatible with /api prefix.", "scope": "", "scopeKind": ""}, {"name": "confluence_login_api_alias(state: Optional[str] = None, scope: Optional[str] = None)", "description": "Proxy route for starting Confluence OAuth flow, compatible with /api prefix.", "scope": "", "scopeKind": ""}, {"name": "confluence_callback_api_alias(request: Request, db=Depends(get_db), code: Optional[str] = None, state: Optional[str] = None)", "description": "Proxy route for Confluence OAuth callback, compatible with /api prefix.", "scope": "", "scopeKind": ""}, {"name": "atlassian_callback_alias(request: Request, db=Depends(get_db), code: Optional[str] = None, state: Optional[str] = None)", "description": "Generic alias for Atlassian OAuth callback, delegates to Jira handler.", "scope": "", "scopeKind": ""}], "search-terms": ["FastAPI", "OAuth", "JIRA", "Confluence", "OAuth callback", "user management", "integration", "project", "page", "REST API", "OAuth flow"], "state": 2, "file_id": 1, "knowledge_revision": 53, "git_revision": "906ba192e73f2ea439ac8fce13c4ec73b18ccf62", "revision_history": [{"7": "3ddbecfdaea73dec9c7dc9e5f607ebdc11919216"}, {"18": "3ddbecfdaea73dec9c7dc9e5f607ebdc11919216"}, {"22": "5e41eb50619ad398f0acd99dcd0f280e619e1f8c"}, {"24": "5e41eb50619ad398f0acd99dcd0f280e619e1f8c"}, {"30": "28dac5a32d269d73eee9c3668810d8ab5eec8ee9"}, {"31": "7fbfd021c4802e87c6da87c524fde505c2578f38"}, {"32": "7fbfd021c4802e87c6da87c524fde505c2578f38"}, {"41": "7897077d84c2ca38be0902a71478cec76a5f5ad0"}, {"42": "7897077d84c2ca38be0902a71478cec76a5f5ad0"}, {"43": "7897077d84c2ca38be0902a71478cec76a5f5ad0"}, {"44": "7897077d84c2ca38be0902a71478cec76a5f5ad0"}, {"47": "906ba192e73f2ea439ac8fce13c4ec73b18ccf62"}, {"48": "906ba192e73f2ea439ac8fce13c4ec73b18ccf62"}, {"53": "906ba192e73f2ea439ac8fce13c4ec73b18ccf62"}], "ctags": [{"_type": "tag", "name": "_ocean_response", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def _ocean_response(data: Any, message: str = \"ok\") -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(data: Any, message: str = \"ok\")"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "atlassian_callback_alias", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^async def atlassian_callback_alias(request: Request, db=Depends(get_db), code: Optional[str] = N/", "language": "Python", "kind": "function", "signature": "(request: Request, db=Depends(get_db), code: Optional[str] = None, state: Optional[str] = None)"}, {"_type": "tag", "name": "confluence_callback", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^async def confluence_callback(request: Request, db=Depends(get_db), code: Optional[str] = None, /", "language": "Python", "kind": "function", "signature": "(request: Request, db=Depends(get_db), code: Optional[str] = None, state: Optional[str] = None)"}, {"_type": "tag", "name": "confluence_callback_api_alias", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^async def confluence_callback_api_alias(request: Request, db=Depends(get_db), code: Optional[str/", "language": "Python", "kind": "function", "signature": "(request: Request, db=Depends(get_db), code: Optional[str] = None, state: Optional[str] = None)"}, {"_type": "tag", "name": "confluence_login", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def confluence_login(state: Optional[str] = None, scope: Optional[str] = None):$/", "language": "Python", "kind": "function", "signature": "(state: Optional[str] = None, scope: Optional[str] = None)"}, {"_type": "tag", "name": "confluence_login_api_alias", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def confluence_login_api_alias(state: Optional[str] = None, scope: Optional[str] = None):$/", "language": "Python", "kind": "function", "signature": "(state: Optional[str] = None, scope: Optional[str] = None)"}, {"_type": "tag", "name": "connect_confluence", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def connect_confluence(db=Depends(get_db), payload: UserCreate | None = None):$/", "language": "Python", "kind": "function", "signature": "(db=Depends(get_db), payload: UserCreate | None = None)"}, {"_type": "tag", "name": "connect_jira", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def connect_jira(db=Depends(get_db), payload: UserCreate | None = None):$/", "language": "Python", "kind": "function", "signature": "(db=Depends(get_db), payload: UserCreate | None = None)"}, {"_type": "tag", "name": "create_user_endpoint", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def create_user_endpoint(payload: UserCreate, db=Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(payload: UserCreate, db=Depends(get_db))"}, {"_type": "tag", "name": "fetch_confluence_pages", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def fetch_confluence_pages(db=Depends(get_db), owner_id: int | None = None):$/", "language": "Python", "kind": "function", "signature": "(db=Depends(get_db), owner_id: int | None = None)"}, {"_type": "tag", "name": "fetch_jira_projects", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def fetch_jira_projects(db=Depends(get_db), owner_id: int | None = None):$/", "language": "Python", "kind": "function", "signature": "(db=Depends(get_db), owner_id: int | None = None)"}, {"_type": "tag", "name": "get_user_endpoint", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def get_user_endpoint(user_id: int, db=Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(user_id: int, db=Depends(get_db))"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "jira_callback", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^async def jira_callback(request: Request, db=Depends(get_db), code: Optional[str] = None, state:/", "language": "Python", "kind": "function", "signature": "(request: Request, db=Depends(get_db), code: Optional[str] = None, state: Optional[str] = None)"}, {"_type": "tag", "name": "jira_callback_api_alias", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^async def jira_callback_api_alias(request: Request, db=Depends(get_db), code: Optional[str] = No/", "language": "Python", "kind": "function", "signature": "(request: Request, db=Depends(get_db), code: Optional[str] = None, state: Optional[str] = None)"}, {"_type": "tag", "name": "jira_login", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def jira_login(state: Optional[str] = None, scope: Optional[str] = None):$/", "language": "Python", "kind": "function", "signature": "(state: Optional[str] = None, scope: Optional[str] = None)"}, {"_type": "tag", "name": "jira_login_api_alias", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def jira_login_api_alias(state: Optional[str] = None, scope: Optional[str] = None):$/", "language": "Python", "kind": "function", "signature": "(state: Optional[str] = None, scope: Optional[str] = None)"}, {"_type": "tag", "name": "list_confluence_pages_endpoint", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def list_confluence_pages_endpoint(owner_id: int, db=Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(owner_id: int, db=Depends(get_db))"}, {"_type": "tag", "name": "list_jira_projects_endpoint", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def list_jira_projects_endpoint(owner_id: int, db=Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(owner_id: int, db=Depends(get_db))"}, {"_type": "tag", "name": "list_users_endpoint", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def list_users_endpoint(db=Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(db=Depends(get_db))"}, {"_type": "tag", "name": "openapi_tags", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^openapi_tags = [$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "upsert_confluence_page_endpoint", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def upsert_confluence_page_endpoint(payload: ConfluencePageCreate, db=Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(payload: ConfluencePageCreate, db=Depends(get_db))"}, {"_type": "tag", "name": "upsert_jira_project_endpoint", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def upsert_jira_project_endpoint(payload: JiraProjectCreate, db=Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(payload: JiraProjectCreate, db=Depends(get_db))"}], "hash": "b8e06fe421d341abc15995dbb1ec8b3e", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/api/main.py", "fields": [{"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "openapi_tags = [", "scope": "", "scopeKind": "", "description": "unavailable"}]}