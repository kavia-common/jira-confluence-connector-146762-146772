{"is_source_file": true, "format": "Python", "description": "This is a FastAPI application code defining a backend API for JIRA and Confluence integration. It includes endpoints for health check, user management, connecting to JIRA/Confluence with placeholder tokens, fetching projects/pages (placeholders), and CRUD operations for JIRA projects and Confluence pages. It also features authentication stubs and demo token handling.", "external_files": ["src/db/config.py", "src/db/service.py", "src/api/schemas.py"], "external_methods": ["create_user", "list_users", "get_user_by_id", "upsert_jira_project", "list_jira_projects_for_user", "upsert_confluence_page", "list_confluence_pages_for_user", "get_db"], "published": ["app", "_ocean_response", "health_check", "issue_token", "get_current_user", "create_user_endpoint", "list_users_endpoint", "get_user_endpoint", "connect_jira", "connect_confluence", "fetch_jira_projects", "fetch_confluence_pages", "upsert_jira_project_endpoint", "list_jira_projects_endpoint", "upsert_confluence_page_endpoint", "list_confluence_pages_endpoint"], "classes": [], "methods": [{"name": "Dict[str,Any] _ocean_response(data: Any, message: str = \"ok\")", "description": "Wraps responses in a standard 'Ocean Professional' style envelope, ensuring consistent API response structure.", "scope": "", "scopeKind": ""}, {"name": "health_check()", "description": "Health check endpoint indicating the service is healthy.", "scope": "", "scopeKind": ""}, {"name": "issue_token(payload: UserCreate, db=Depends(get_db))", "description": "Creates a demo authentication token for a user, returning a mock token for testing purposes.", "scope": "", "scopeKind": ""}, {"name": "get_current_user( authorization: Optional[str] = Header(default=None), db=Depends(get_db), )", "description": "A dependency stub that extracts and validates a demo bearer token, returning the corresponding user.", "scope": "", "scopeKind": ""}, {"name": "create_user_endpoint(payload: UserCreate, db=Depends(get_db))", "description": "Endpoint to create or fetch a user, idempotently.", "scope": "", "scopeKind": ""}, {"name": "list_users_endpoint(db=Depends(get_db), current_user=Depends(get_current_user))", "description": "Lists all users; requires authentication.", "scope": "", "scopeKind": ""}, {"name": "get_user_endpoint(user_id: int, db=Depends(get_db), current_user=Depends(get_current_user))", "description": "Fetches a user by ID, returns 404 if not found.", "scope": "", "scopeKind": ""}, {"name": "connect_jira(payload: ConnectRequest, db=Depends(get_db), current_user=Depends(get_current_user))", "description": "Stores JIRA connection details for the current user (demo placeholder).", "scope": "", "scopeKind": ""}, {"name": "connect_confluence(payload: ConnectRequest, db=Depends(get_db), current_user=Depends(get_current_user))", "description": "Stores Confluence connection details for the current user (demo placeholder).", "scope": "", "scopeKind": ""}, {"name": "fetch_jira_projects(db=Depends(get_db), current_user=Depends(get_current_user))", "description": "Fetches JIRA projects for the user; currently returns stored projects only as a placeholder.", "scope": "", "scopeKind": ""}, {"name": "fetch_confluence_pages(db=Depends(get_db), current_user=Depends(get_current_user))", "description": "Fetches Confluence pages for the user; currently returns stored pages only as a placeholder.", "scope": "", "scopeKind": ""}, {"name": "upsert_jira_project_endpoint(payload: JiraProjectCreate, db=Depends(get_db), current_user=Depends(get_current_user))", "description": "Creates or updates a JIRA project for a user.", "scope": "", "scopeKind": ""}, {"name": "list_jira_projects_endpoint(owner_id: int, db=Depends(get_db), current_user=Depends(get_current_user))", "description": "Lists all JIRA projects for a given owner.", "scope": "", "scopeKind": ""}, {"name": "upsert_confluence_page_endpoint(payload: ConfluencePageCreate, db=Depends(get_db), current_user=Depends(get_current_user))", "description": "Creates or updates a Confluence page for a user.", "scope": "", "scopeKind": ""}, {"name": "list_confluence_pages_endpoint(owner_id: int, db=Depends(get_db), current_user=Depends(get_current_user))", "description": "Lists all Confluence pages for a given owner.", "scope": "", "scopeKind": ""}], "calls": ["create_user", "list_users", "get_user_by_id", "upsert_jira_project", "list_jira_projects_for_user", "upsert_confluence_page", "list_confluence_pages_for_user"], "search-terms": ["FastAPI", "JIRA Confluence API", "user management API", "connect JIRA Confluence", "fetch projects pages", "demo auth token"], "state": 2, "file_id": 1, "knowledge_revision": 24, "git_revision": "5e41eb50619ad398f0acd99dcd0f280e619e1f8c", "revision_history": [{"7": "3ddbecfdaea73dec9c7dc9e5f607ebdc11919216"}, {"18": "3ddbecfdaea73dec9c7dc9e5f607ebdc11919216"}, {"22": "5e41eb50619ad398f0acd99dcd0f280e619e1f8c"}, {"24": "5e41eb50619ad398f0acd99dcd0f280e619e1f8c"}], "ctags": [{"_type": "tag", "name": "_ocean_response", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def _ocean_response(data: Any, message: str = \"ok\") -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(data: Any, message: str = \"ok\")"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "connect_confluence", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def connect_confluence(payload: ConnectRequest, db=Depends(get_db), current_user=Depends(get_cur/", "language": "Python", "kind": "function", "signature": "(payload: ConnectRequest, db=Depends(get_db), current_user=Depends(get_current_user))"}, {"_type": "tag", "name": "connect_jira", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def connect_jira(payload: ConnectRequest, db=Depends(get_db), current_user=Depends(get_current_u/", "language": "Python", "kind": "function", "signature": "(payload: ConnectRequest, db=Depends(get_db), current_user=Depends(get_current_user))"}, {"_type": "tag", "name": "create_user_endpoint", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def create_user_endpoint(payload: UserCreate, db=Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(payload: UserCreate, db=Depends(get_db))"}, {"_type": "tag", "name": "fetch_confluence_pages", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def fetch_confluence_pages(db=Depends(get_db), current_user=Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(db=Depends(get_db), current_user=Depends(get_current_user))"}, {"_type": "tag", "name": "fetch_jira_projects", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def fetch_jira_projects(db=Depends(get_db), current_user=Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(db=Depends(get_db), current_user=Depends(get_current_user))"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def get_current_user($/", "language": "Python", "kind": "function", "signature": "( authorization: Optional[str] = Header(default=None), db=Depends(get_db), )"}, {"_type": "tag", "name": "get_user_endpoint", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def get_user_endpoint(user_id: int, db=Depends(get_db), current_user=Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(user_id: int, db=Depends(get_db), current_user=Depends(get_current_user))"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "issue_token", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def issue_token(payload: UserCreate, db=Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(payload: UserCreate, db=Depends(get_db))"}, {"_type": "tag", "name": "list_confluence_pages_endpoint", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def list_confluence_pages_endpoint(owner_id: int, db=Depends(get_db), current_user=Depends(get_c/", "language": "Python", "kind": "function", "signature": "(owner_id: int, db=Depends(get_db), current_user=Depends(get_current_user))"}, {"_type": "tag", "name": "list_jira_projects_endpoint", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def list_jira_projects_endpoint(owner_id: int, db=Depends(get_db), current_user=Depends(get_curr/", "language": "Python", "kind": "function", "signature": "(owner_id: int, db=Depends(get_db), current_user=Depends(get_current_user))"}, {"_type": "tag", "name": "list_users_endpoint", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def list_users_endpoint(db=Depends(get_db), current_user=Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(db=Depends(get_db), current_user=Depends(get_current_user))"}, {"_type": "tag", "name": "openapi_tags", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^openapi_tags = [$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "upsert_confluence_page_endpoint", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def upsert_confluence_page_endpoint(payload: ConfluencePageCreate, db=Depends(get_db), current_u/", "language": "Python", "kind": "function", "signature": "(payload: ConfluencePageCreate, db=Depends(get_db), current_user=Depends(get_current_user))"}, {"_type": "tag", "name": "upsert_jira_project_endpoint", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def upsert_jira_project_endpoint(payload: JiraProjectCreate, db=Depends(get_db), current_user=De/", "language": "Python", "kind": "function", "signature": "(payload: JiraProjectCreate, db=Depends(get_db), current_user=Depends(get_current_user))"}], "hash": "643aecc240335cf18cac82afb78e4b6e", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/api/main.py", "fields": [{"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "openapi_tags = [", "scope": "", "scopeKind": "", "description": "unavailable"}]}