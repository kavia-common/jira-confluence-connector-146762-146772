{"is_source_file": true, "format": "Python", "description": "This file is the main FastAPI application setup for the Jira-Confluence integration backend. It defines the API endpoints for health checks, user management, JIRA project management, and Confluence page management, including route definitions, request handling, and middleware configuration.", "external_files": ["src/db/config.py", "src/db/models.py", "src/db/service.py", "src/api/schemas.py"], "external_methods": ["create_user", "list_users", "get_user_by_id", "upsert_jira_project", "list_jira_projects_for_user", "upsert_confluence_page", "list_confluence_pages_for_user", "get_db"], "published": ["app"], "classes": [], "methods": [{"name": "health_check()", "description": "Health check endpoint indicating the API is up.", "scope": "", "scopeKind": ""}, {"name": "create_user_endpoint(payload: UserCreate, db=Depends(get_db))", "description": "API endpoint to create a new user or retrieve existing one.", "scope": "", "scopeKind": ""}, {"name": "list_users_endpoint(db=Depends(get_db))", "description": "API endpoint to list all users.", "scope": "", "scopeKind": ""}, {"name": "get_user_endpoint(user_id: int, db=Depends(get_db))", "description": "API endpoint to get user details by ID.", "scope": "", "scopeKind": ""}, {"name": "upsert_jira_project_endpoint(payload: JiraProjectCreate, db=Depends(get_db))", "description": "API endpoint to create or update a JIRA project for a user.", "scope": "", "scopeKind": ""}, {"name": "list_jira_projects_endpoint(owner_id: int, db=Depends(get_db))", "description": "API endpoint to list all JIRA projects for a user.", "scope": "", "scopeKind": ""}, {"name": "upsert_confluence_page_endpoint(payload: ConfluencePageCreate, db=Depends(get_db))", "description": "API endpoint to create or update a Confluence page for a user.", "scope": "", "scopeKind": ""}, {"name": "list_confluence_pages_endpoint(owner_id: int, db=Depends(get_db))", "description": "API endpoint to list all Confluence pages for a user.", "scope": "", "scopeKind": ""}], "calls": ["create_user", "list_users", "get_user_by_id", "upsert_jira_project", "list_jira_projects_for_user", "upsert_confluence_page", "list_confluence_pages_for_user"], "search-terms": ["FastAPI", "jira_confluence", "integration API", "user management", "project sync", "confluence pages"], "state": 2, "file_id": 1, "knowledge_revision": 18, "git_revision": "3ddbecfdaea73dec9c7dc9e5f607ebdc11919216", "revision_history": [{"7": "3ddbecfdaea73dec9c7dc9e5f607ebdc11919216"}, {"18": "3ddbecfdaea73dec9c7dc9e5f607ebdc11919216"}], "ctags": [{"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create_user_endpoint", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def create_user_endpoint(payload: UserCreate, db=Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(payload: UserCreate, db=Depends(get_db))"}, {"_type": "tag", "name": "get_user_endpoint", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def get_user_endpoint(user_id: int, db=Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(user_id: int, db=Depends(get_db))"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "list_confluence_pages_endpoint", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def list_confluence_pages_endpoint(owner_id: int, db=Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(owner_id: int, db=Depends(get_db))"}, {"_type": "tag", "name": "list_jira_projects_endpoint", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def list_jira_projects_endpoint(owner_id: int, db=Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(owner_id: int, db=Depends(get_db))"}, {"_type": "tag", "name": "list_users_endpoint", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def list_users_endpoint(db=Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(db=Depends(get_db))"}, {"_type": "tag", "name": "openapi_tags", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^openapi_tags = [$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "upsert_confluence_page_endpoint", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def upsert_confluence_page_endpoint(payload: ConfluencePageCreate, db=Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(payload: ConfluencePageCreate, db=Depends(get_db))"}, {"_type": "tag", "name": "upsert_jira_project_endpoint", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def upsert_jira_project_endpoint(payload: JiraProjectCreate, db=Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(payload: JiraProjectCreate, db=Depends(get_db))"}], "hash": "474ae19e02b4bac69104e6f33c309bbc", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/api/main.py", "fields": [{"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "openapi_tags = [", "scope": "", "scopeKind": "", "description": "unavailable"}]}