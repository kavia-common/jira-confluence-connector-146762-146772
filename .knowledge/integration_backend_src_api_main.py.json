{"is_source_file": true, "format": "Python", "description": "This file defines a FastAPI web server implementing an API for Jira-Confluence integration, including OAuth flows, user management, and placeholders for fetching projects and pages. It sets up routes for health checks, OAuth initiation and callbacks, user CRUD operations, and integration endpoints.", "external_files": ["src/db/config", "src/db/service", "src.api.oauth_config", "src.api.schemas", "src.api.oauth_atlassian", "src.api.oauth_settings", "src.api.oauth_return_flow"], "external_methods": ["get_jira_oauth_config", "get_confluence_oauth_config", "get_frontend_base_url_default", "list_users", "create_user", "get_user_by_id", "upsert_jira_project", "list_jira_projects_for_user", "upsert_confluence_page", "list_confluence_pages_for_user", "get_atlassian_base_url"], "published": ["app", "health_check", "auth_jira_json", "jira_login", "jira_callback", "create_user_endpoint", "list_users_endpoint", "get_user_endpoint", "confluence_login", "confluence_callback", "connect_jira", "connect_confluence", "fetch_jira_projects", "fetch_confluence_pages", "upsert_jira_project_endpoint", "list_jira_projects_endpoint", "upsert_confluence_page_endpoint", "list_confluence_pages_endpoint"], "classes": [], "methods": [{"name": "Dict[str,Any] _ocean_response(data: Any, message: str = \"ok\")", "description": "Utility function to wrap API responses in a consistent envelope with status, message, and data.", "scope": "", "scopeKind": ""}, {"name": "health_check()", "description": "Health check endpoint that returns API status and health information.", "scope": "", "scopeKind": ""}, {"name": "auth_jira_json(state: Optional[str] = None, scope: Optional[str] = None)", "description": "Endpoint returning JSON with Jira OAuth authorization URL.", "scope": "", "scopeKind": ""}, {"name": "jira_login(state: Optional[str] = None, scope: Optional[str] = None)", "description": "Starts OAuth flow for Jira by redirecting to Atlassian auth endpoint.", "scope": "", "scopeKind": ""}, {"name": "jira_callback(request: Request, db=Depends(get_db), code: Optional[str] = None, state: Optional[str] = None)", "description": "Completes OAuth flow: exchanges code for tokens, stores them in the first user, and redirects to frontend.", "scope": "", "scopeKind": ""}, {"name": "create_user_endpoint(payload: UserCreate, db=Depends(get_db))", "description": "Creates or fetches a user based on provided data.", "scope": "", "scopeKind": ""}, {"name": "list_users_endpoint(db=Depends(get_db))", "description": "Lists all users.", "scope": "", "scopeKind": ""}, {"name": "get_user_endpoint(user_id: int, db=Depends(get_db))", "description": "Fetches a user by ID.", "scope": "", "scopeKind": ""}, {"name": "confluence_login(state: Optional[str] = None, scope: Optional[str] = None)", "description": "Initiates OAuth flow for Confluence, redirecting to Atlassian auth endpoint.", "scope": "", "scopeKind": ""}, {"name": "confluence_callback(request: Request, db=Depends(get_db), code: Optional[str] = None, state: Optional[str] = None)", "description": "Completes OAuth flow for Confluence, storing tokens and redirecting to frontend.", "scope": "", "scopeKind": ""}, {"name": "connect_jira(db=Depends(get_db), payload: UserCreate | None = None)", "description": "Guides client to start Jira OAuth process.", "scope": "", "scopeKind": ""}, {"name": "connect_confluence(db=Depends(get_db), payload: UserCreate | None = None)", "description": "Guides client to start Confluence OAuth process.", "scope": "", "scopeKind": ""}, {"name": "fetch_jira_projects(db=Depends(get_db), owner_id: int | None = None)", "description": "Placeholder fetching stored Jira projects; can be expanded to fetch from JIRA API.", "scope": "", "scopeKind": ""}, {"name": "fetch_confluence_pages(db=Depends(get_db), owner_id: int | None = None)", "description": "Placeholder fetching stored Confluence pages; can be expanded to fetch from API.", "scope": "", "scopeKind": ""}, {"name": "upsert_jira_project_endpoint(payload: JiraProjectCreate, db=Depends(get_db))", "description": "Upserts (creates/updates) a Jira project linked to a user.", "scope": "", "scopeKind": ""}, {"name": "list_jira_projects_endpoint(owner_id: int, db=Depends(get_db))", "description": "Lists all Jira projects for a specific user.", "scope": "", "scopeKind": ""}, {"name": "upsert_confluence_page_endpoint(payload: ConfluencePageCreate, db=Depends(get_db))", "description": "Upserts (creates/updates) a Confluence page linked to a user.", "scope": "", "scopeKind": ""}, {"name": "list_confluence_pages_endpoint(owner_id: int, db=Depends(get_db))", "description": "Lists all Confluence pages for a specific user.", "scope": "", "scopeKind": ""}], "search-terms": ["FastAPI", "OAuth", "Jira", "Confluence", "OAuth callback", "User management", "OAuth login", "Integration endpoints"], "state": 2, "file_id": 1, "knowledge_revision": 202, "git_revision": "30f3ce1d33b536a786e75b2567f6ddaee9720a44", "revision_history": [{"7": "3ddbecfdaea73dec9c7dc9e5f607ebdc11919216"}, {"18": "3ddbecfdaea73dec9c7dc9e5f607ebdc11919216"}, {"22": "5e41eb50619ad398f0acd99dcd0f280e619e1f8c"}, {"24": "5e41eb50619ad398f0acd99dcd0f280e619e1f8c"}, {"30": "28dac5a32d269d73eee9c3668810d8ab5eec8ee9"}, {"31": "7fbfd021c4802e87c6da87c524fde505c2578f38"}, {"32": "7fbfd021c4802e87c6da87c524fde505c2578f38"}, {"41": "7897077d84c2ca38be0902a71478cec76a5f5ad0"}, {"42": "7897077d84c2ca38be0902a71478cec76a5f5ad0"}, {"43": "7897077d84c2ca38be0902a71478cec76a5f5ad0"}, {"44": "7897077d84c2ca38be0902a71478cec76a5f5ad0"}, {"47": "906ba192e73f2ea439ac8fce13c4ec73b18ccf62"}, {"48": "906ba192e73f2ea439ac8fce13c4ec73b18ccf62"}, {"128": "4d6ef005c692f93f1d0a7dcc437e42a1b815165f"}, {"129": "b9e829ab48cfdb04493148b0df08b9ae0a0119d7"}, {"130": "b9e829ab48cfdb04493148b0df08b9ae0a0119d7"}, {"131": "b9e829ab48cfdb04493148b0df08b9ae0a0119d7"}, {"132": "bad52bf702806bb9987b8aee01b54fa7f9a2e3f5"}, {"197": "6b909d8b8bea072b4648907235ef6d3f922152e3"}, {"202": "30f3ce1d33b536a786e75b2567f6ddaee9720a44"}], "ctags": [{"_type": "tag", "name": "_ocean_response", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def _ocean_response(data: Any, message: str = \"ok\") -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(data: Any, message: str = \"ok\")"}, {"_type": "tag", "name": "allowed_origins", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^allowed_origins = get_cors_origins()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "auth_jira_json", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^async def auth_jira_json(state: Optional[str] = None, scope: Optional[str] = None):$/", "language": "Python", "kind": "function", "signature": "(state: Optional[str] = None, scope: Optional[str] = None)"}, {"_type": "tag", "name": "confluence_callback", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^async def confluence_callback(request: Request, db=Depends(get_db), code: Optional[str] = None, /", "language": "Python", "kind": "function", "signature": "(request: Request, db=Depends(get_db), code: Optional[str] = None, state: Optional[str] = None)"}, {"_type": "tag", "name": "confluence_login", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def confluence_login(state: Optional[str] = None, scope: Optional[str] = None):$/", "language": "Python", "kind": "function", "signature": "(state: Optional[str] = None, scope: Optional[str] = None)"}, {"_type": "tag", "name": "connect_confluence", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def connect_confluence(db=Depends(get_db), payload: UserCreate | None = None):$/", "language": "Python", "kind": "function", "signature": "(db=Depends(get_db), payload: UserCreate | None = None)"}, {"_type": "tag", "name": "connect_jira", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def connect_jira(db=Depends(get_db), payload: UserCreate | None = None):$/", "language": "Python", "kind": "function", "signature": "(db=Depends(get_db), payload: UserCreate | None = None)"}, {"_type": "tag", "name": "create_user_endpoint", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def create_user_endpoint(payload: UserCreate, db=Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(payload: UserCreate, db=Depends(get_db))"}, {"_type": "tag", "name": "fetch_confluence_pages", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def fetch_confluence_pages(db=Depends(get_db), owner_id: int | None = None):$/", "language": "Python", "kind": "function", "signature": "(db=Depends(get_db), owner_id: int | None = None)"}, {"_type": "tag", "name": "fetch_jira_projects", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def fetch_jira_projects(db=Depends(get_db), owner_id: int | None = None):$/", "language": "Python", "kind": "function", "signature": "(db=Depends(get_db), owner_id: int | None = None)"}, {"_type": "tag", "name": "get_user_endpoint", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def get_user_endpoint(user_id: int, db=Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(user_id: int, db=Depends(get_db))"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "jira_callback", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^async def jira_callback(request: Request, db=Depends(get_db), code: Optional[str] = None, state:/", "language": "Python", "kind": "function", "signature": "(request: Request, db=Depends(get_db), code: Optional[str] = None, state: Optional[str] = None)"}, {"_type": "tag", "name": "jira_login", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def jira_login(state: Optional[str] = None, scope: Optional[str] = None):$/", "language": "Python", "kind": "function", "signature": "(state: Optional[str] = None, scope: Optional[str] = None)"}, {"_type": "tag", "name": "list_confluence_pages_endpoint", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def list_confluence_pages_endpoint(owner_id: int, db=Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(owner_id: int, db=Depends(get_db))"}, {"_type": "tag", "name": "list_jira_projects_endpoint", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def list_jira_projects_endpoint(owner_id: int, db=Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(owner_id: int, db=Depends(get_db))"}, {"_type": "tag", "name": "list_users_endpoint", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def list_users_endpoint(db=Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(db=Depends(get_db))"}, {"_type": "tag", "name": "oauth_return_router", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^from src.api.oauth_return_flow import router as oauth_return_router$/", "language": "Python", "kind": "unknown", "nameref": "unknown:router"}, {"_type": "tag", "name": "oauth_router", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^from src.api import oauth_atlassian as oauth_router$/", "language": "Python", "kind": "unknown", "nameref": "unknown:oauth_atlassian"}, {"_type": "tag", "name": "openapi_tags", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^openapi_tags = [$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "upsert_confluence_page_endpoint", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def upsert_confluence_page_endpoint(payload: ConfluencePageCreate, db=Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(payload: ConfluencePageCreate, db=Depends(get_db))"}, {"_type": "tag", "name": "upsert_jira_project_endpoint", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def upsert_jira_project_endpoint(payload: JiraProjectCreate, db=Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(payload: JiraProjectCreate, db=Depends(get_db))"}], "hash": "2f4a9a6ef207793288337f07d6fd71f0", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/api/main.py", "fields": [{"name": "allowed_origins = get_cors_origins()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "openapi_tags = [", "scope": "", "scopeKind": "", "description": "unavailable"}]}