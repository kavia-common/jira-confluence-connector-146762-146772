{"is_source_file": true, "format": "Python", "description": "This Python source file sets up a FastAPI-based backend API for integrating JIRA and Confluence, including configuration, middleware, health checks, OAuth configurations, static file serving, and route inclusion for specific connectors and OAuth mechanisms.", "external_files": ["src.db.config", "src.api.oauth_config", "src.api.routers", "src.api.jira_oauth", "src.api.auth"], "external_methods": ["get_jira_oauth_config", "build_atlassian_authorize_url", "get_active_redirect_uris_debug"], "published": ["app", "health_check", "health", "healthz", "health_redirect_uri", "health_authorize_url_probe", "health_redirect_pieces"], "classes": [{"name": "SafeJSONFormatter", "description": "Custom JSON formatter for structured logging, including timestamp and log details."}, {"name": "RequestIDMiddleware", "description": "Middleware to assign and propagate unique request IDs for tracing."}], "methods": [{"name": "logging.Logger _configure_logging()", "description": "Configures and returns a logger with a custom JSON formatter.", "scope": "", "scopeKind": ""}, {"name": "favicon()", "description": "Serves the favicon.ico or a transparent PNG fallback.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] _ocean_response(data: Any, message: str = \"ok\")", "description": "Generates a standardized API response with status, message, and data.", "scope": "", "scopeKind": ""}, {"name": "dispatch(self, request: Request, call_next)", "scope": "RequestIDMiddleware", "scopeKind": "class", "description": "unavailable"}, {"name": "str format(self, record: logging.LogRecord)", "scope": "SafeJSONFormatter", "scopeKind": "class", "description": "unavailable"}, {"name": "health()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "health_authorize_url_probe(request: Request)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "health_check()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "health_redirect_pieces(request: Request)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "health_redirect_uri()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "healthz()", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["Base.metadata.create_all", "app.include_router", "app.mount", "app.get", "os.getenv", "os.path.join", "os.path.abspath", "os.path.dirname", "os.path.isfile", "json.dumps", "base64.b64decode", "urllib.parse.quote", "urllib.parse.urlparse"], "search-terms": ["FastAPI", "Jira Confluence integration", "OAuth configuration", "Health check endpoints", "Request ID middleware", "Static file serving", "Router inclusion", "Logging formatter", "Dynamic configuration"], "state": 2, "file_id": 1, "knowledge_revision": 441, "git_revision": "395220140704eccdc0a80f4d921cc02231c0c030", "revision_history": [{"7": "3ddbecfdaea73dec9c7dc9e5f607ebdc11919216"}, {"18": "3ddbecfdaea73dec9c7dc9e5f607ebdc11919216"}, {"22": "5e41eb50619ad398f0acd99dcd0f280e619e1f8c"}, {"24": "5e41eb50619ad398f0acd99dcd0f280e619e1f8c"}, {"30": "28dac5a32d269d73eee9c3668810d8ab5eec8ee9"}, {"31": "7fbfd021c4802e87c6da87c524fde505c2578f38"}, {"32": "7fbfd021c4802e87c6da87c524fde505c2578f38"}, {"41": "7897077d84c2ca38be0902a71478cec76a5f5ad0"}, {"42": "7897077d84c2ca38be0902a71478cec76a5f5ad0"}, {"43": "7897077d84c2ca38be0902a71478cec76a5f5ad0"}, {"44": "7897077d84c2ca38be0902a71478cec76a5f5ad0"}, {"47": "906ba192e73f2ea439ac8fce13c4ec73b18ccf62"}, {"48": "906ba192e73f2ea439ac8fce13c4ec73b18ccf62"}, {"53": "906ba192e73f2ea439ac8fce13c4ec73b18ccf62"}, {"56": "8c69d0e627c970866f887e455b3fe92fd2ca45e7"}, {"58": "ce9dd25068e5bd76fdddef3c3666432880c7a53d"}, {"413": "833b48e55677e2fc3facbe956ac284ec82d92bb2"}, {"421": "833b48e55677e2fc3facbe956ac284ec82d92bb2"}, {"430": "395220140704eccdc0a80f4d921cc02231c0c030"}, {"441": "395220140704eccdc0a80f4d921cc02231c0c030"}], "ctags": [{"_type": "tag", "name": "APP_LOGGER", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^APP_LOGGER = _configure_logging()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "RequestIDMiddleware", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^class RequestIDMiddleware(BaseHTTPMiddleware):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "SafeJSONFormatter", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^class SafeJSONFormatter(logging.Formatter):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_configure_logging", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def _configure_logging() -> logging.Logger:$/", "language": "Python", "typeref": "typename:logging.Logger", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_ocean_response", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def _ocean_response(data: Any, message: str = \"ok\") -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(data: Any, message: str = \"ok\")"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "auth_router", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^from src.api.auth import router as auth_router  # noqa: E402$/", "language": "Python", "kind": "unknown", "nameref": "unknown:router"}, {"_type": "tag", "name": "configured", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^configured = os.getenv(\"NEXT_PUBLIC_BACKEND_CORS_ORIGINS\") or os.getenv(\"BACKEND_CORS_ORIGINS\") /", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "configured_list", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^configured_list = [o.strip() for o in configured.split(\",\")] if configured else [\"*\"]$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "connectors_router", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^from src.api.routers import connectors as connectors_router  # noqa: E402$/", "language": "Python", "kind": "unknown", "nameref": "unknown:connectors"}, {"_type": "tag", "name": "dispatch", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^    async def dispatch(self, request: Request, call_next):$/", "language": "Python", "kind": "member", "signature": "(self, request: Request, call_next)", "scope": "RequestIDMiddleware", "scopeKind": "class"}, {"_type": "tag", "name": "favicon", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def favicon():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "format", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^    def format(self, record: logging.LogRecord) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, record: logging.LogRecord)", "scope": "SafeJSONFormatter", "scopeKind": "class"}, {"_type": "tag", "name": "health", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def health():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "health_authorize_url_probe", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def health_authorize_url_probe(request: Request):$/", "language": "Python", "kind": "function", "signature": "(request: Request)"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "health_redirect_pieces", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def health_redirect_pieces(request: Request):$/", "language": "Python", "kind": "function", "signature": "(request: Request)"}, {"_type": "tag", "name": "health_redirect_uri", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def health_redirect_uri():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "healthz", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^def healthz():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "jira_oauth_router", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^from src.api.jira_oauth import router as jira_oauth_router  # noqa: E402$/", "language": "Python", "kind": "unknown", "nameref": "unknown:router"}, {"_type": "tag", "name": "openapi_tags", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^openapi_tags = [$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "static_dir", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/api/main.py", "pattern": "/^static_dir = os.path.abspath(os.path.join(os.path.dirname(os.path.dirname(__file__)), \"..\", \"sta/", "language": "Python", "kind": "variable"}], "hash": "b0c1cd8fe51d2c048bfb36233b0952a6", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/api/main.py", "fields": [{"name": "APP_LOGGER = _configure_logging()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "configured = os.getenv(\"NEXT_PUBLIC_BACKEND_CORS_ORIGINS\") or os.getenv(\"BACKEND_CORS_ORIGINS\") /", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "configured_list = [o.strip() for o in configured.split(\",\")] if configured else [\"*\"]", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "openapi_tags = [", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "static_dir = os.path.abspath(os.path.join(os.path.dirname(os.path.dirname(__file__)), \"..\", \"sta/", "scope": "", "scopeKind": "", "description": "unavailable"}]}