{"is_source_file": true, "format": "Python", "description": "This file provides cryptographic utilities for secure data encryption and decryption, including key derivation, encryption, decryption, JSON serialization, and environment-based key loading. It supports AES-GCM encryption if the cryptography library is available.", "external_files": ["cryptography.hazmat.primitives.ciphers.aead.AESGCM"], "external_methods": ["base64.urlsafe_b64decode", "base64.b64decode", "base64.b64encode", "json.dumps", "json.loads", "secrets.token_bytes", "os.getenv", "sha256"], "published": ["is_encryption_active", "encrypt_bytes", "decrypt_bytes", "encrypt_json", "decrypt_json"], "classes": [], "methods": [{"name": "bytes _derive_key_from_string(key_str: str)", "description": "Derives a 32-byte key from an arbitrary string using SHA-256, intended for development purposes.", "scope": "", "scopeKind": ""}, {"name": "Optional[bytes] _load_key()", "description": "Loads an encryption key from the environment variable 'ENCRYPTION_KEY', attempting base64 decoding before fallback.", "scope": "", "scopeKind": ""}, {"name": "bool is_encryption_active()", "description": "Checks whether encryption capabilities are active based on library availability and key presence.", "scope": "", "scopeKind": ""}, {"name": "Tuple[str,bool] encrypt_bytes(plaintext: bytes)", "description": "Encrypts a bytes value using AES-GCM if available, otherwise returns base64-encoded plaintext.", "scope": "", "scopeKind": ""}, {"name": "bytes decrypt_bytes(ciphertext_b64: str, was_encrypted: bool)", "description": "Decrypts data encrypted by 'encrypt_bytes' or returns the raw data if not encrypted.", "scope": "", "scopeKind": ""}, {"name": "Tuple[str,bool] encrypt_json(obj: Any)", "description": "Serializes an object to JSON and encrypts it.", "scope": "", "scopeKind": ""}, {"name": "Any decrypt_json(ciphertext_b64: str, was_encrypted: bool)", "description": "Decrypts encrypted JSON data and deserializes it into a Python object.", "scope": "", "scopeKind": ""}], "calls": ["base64.urlsafe_b64decode", "base64.b64decode", "base64.b64encode", "json.dumps", "json.loads", "secrets.token_bytes", "os.getenv", "sha256"], "search-terms": ["AESGCM", "encryption key", "secure data", "JSON encryption", "cryptography", "base64", "AES-GCM"], "state": 2, "file_id": 22, "knowledge_revision": 137, "git_revision": "", "ctags": [{"_type": "tag", "name": "AESGCM", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/base/security.py", "pattern": "/^    AESGCM = None  # type: ignore$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_derive_key_from_string", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/base/security.py", "pattern": "/^def _derive_key_from_string(key_str: str) -> bytes:$/", "language": "Python", "typeref": "typename:bytes", "kind": "function", "signature": "(key_str: str)"}, {"_type": "tag", "name": "_load_key", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/base/security.py", "pattern": "/^def _load_key() -> Optional[bytes]:$/", "language": "Python", "typeref": "typename:Optional[bytes]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "decrypt_bytes", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/base/security.py", "pattern": "/^def decrypt_bytes(ciphertext_b64: str, was_encrypted: bool) -> bytes:$/", "language": "Python", "typeref": "typename:bytes", "kind": "function", "signature": "(ciphertext_b64: str, was_encrypted: bool)"}, {"_type": "tag", "name": "decrypt_json", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/base/security.py", "pattern": "/^def decrypt_json(ciphertext_b64: str, was_encrypted: bool) -> Any:$/", "language": "Python", "typeref": "typename:Any", "kind": "function", "signature": "(ciphertext_b64: str, was_encrypted: bool)"}, {"_type": "tag", "name": "encrypt_bytes", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/base/security.py", "pattern": "/^def encrypt_bytes(plaintext: bytes) -> Tuple[str, bool]:$/", "language": "Python", "typeref": "typename:Tuple[str,bool]", "kind": "function", "signature": "(plaintext: bytes)"}, {"_type": "tag", "name": "encrypt_json", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/base/security.py", "pattern": "/^def encrypt_json(obj: Any) -> Tuple[str, bool]:$/", "language": "Python", "typeref": "typename:Tuple[str,bool]", "kind": "function", "signature": "(obj: Any)"}, {"_type": "tag", "name": "is_encryption_active", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/base/security.py", "pattern": "/^def is_encryption_active() -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/jira-confluence-connector-146762-146772/integration_backend/src/connectors/base/security.py", "pattern": "/^logger = logging.getLogger(\"integration_backend.security\")$/", "language": "Python", "kind": "variable"}], "hash": "d8027cc28ddee014ad2cf66e35e380c3", "format-version": 4, "code-base-name": "integration_backend", "filename": "integration_backend/src/connectors/base/security.py", "fields": [{"name": "AESGCM = None  # type: ignore", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "logger = logging.getLogger(\"integration_backend.security\")", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"137": ""}]}